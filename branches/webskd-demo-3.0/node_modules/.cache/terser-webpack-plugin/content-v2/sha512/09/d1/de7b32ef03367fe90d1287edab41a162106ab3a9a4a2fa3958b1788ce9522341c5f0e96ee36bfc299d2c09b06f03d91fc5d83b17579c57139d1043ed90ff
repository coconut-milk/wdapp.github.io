{"map":"{\"version\":3,\"sources\":[\"webpack/bootstrap\"],\"names\":[\"installedModules\",\"__webpack_require__\",\"moduleId\",\"exports\",\"module\",\"i\",\"l\",\"modules\",\"call\",\"m\",\"c\",\"d\",\"name\",\"getter\",\"o\",\"Object\",\"defineProperty\",\"enumerable\",\"get\",\"r\",\"Symbol\",\"toStringTag\",\"value\",\"t\",\"mode\",\"__esModule\",\"ns\",\"create\",\"key\",\"bind\",\"n\",\"default\",\"object\",\"property\",\"prototype\",\"hasOwnProperty\",\"p\",\"s\",\"10\",\"eval\"],\"mappings\":\"aACA,IAAAA,EAAA,GAGA,SAAAC,EAAAC,GAGA,GAAAF,EAAAE,GACA,OAAAF,EAAAE,GAAAC,QAGA,IAAAC,EAAAJ,EAAAE,GAAA,CACAG,EAAAH,EACAI,GAAAA,EACAH,QAAA,IAUA,OANAI,EAAAL,GAAAM,KAAAJ,EAAAD,QAAAC,EAAAA,EAAAD,QAAAF,GAGAG,EAAAE,GAAAA,EAGAF,EAAAD,QAKAF,EAAAQ,EAAAF,EAGAN,EAAAS,EAAAV,EAGAC,EAAAU,EAAA,SAAAR,EAAAS,EAAAC,GACAZ,EAAAa,EAAAX,EAAAS,IACAG,OAAAC,eAAAb,EAAAS,EAAA,CAA0CK,YAAAA,EAAAC,IAAAL,KAK1CZ,EAAAkB,EAAA,SAAAhB,GACA,oBAAAiB,QAAAA,OAAAC,aACAN,OAAAC,eAAAb,EAAAiB,OAAAC,YAAA,CAAwDC,MAAA,WAExDP,OAAAC,eAAAb,EAAA,aAAA,CAAiDmB,OAAAA,KAQjDrB,EAAAsB,EAAA,SAAAD,EAAAE,GAEA,GADA,EAAAA,IAAAF,EAAArB,EAAAqB,IACA,EAAAE,EAAA,OAAAF,EACA,GAAA,EAAAE,GAAA,iBAAAF,GAAAA,GAAAA,EAAAG,WAAA,OAAAH,EACA,IAAAI,EAAAX,OAAAY,OAAA,MAGA,GAFA1B,EAAAkB,EAAAO,GACAX,OAAAC,eAAAU,EAAA,UAAA,CAAyCT,YAAAA,EAAAK,MAAAA,IACzC,EAAAE,GAAA,iBAAAF,EAAA,IAAA,IAAAM,KAAAN,EAAArB,EAAAU,EAAAe,EAAAE,EAAA,SAAAA,GAAgH,OAAAN,EAAAM,IAAqBC,KAAA,KAAAD,IACrI,OAAAF,GAIAzB,EAAA6B,EAAA,SAAA1B,GACA,IAAAS,EAAAT,GAAAA,EAAAqB,WACA,WAA2B,OAAArB,EAAA2B,SAC3B,WAAiC,OAAA3B,GAEjC,OADAH,EAAAU,EAAAE,EAAA,IAAAA,GACAA,GAIAZ,EAAAa,EAAA,SAAAkB,EAAAC,GAAsD,OAAAlB,OAAAmB,UAAAC,eAAA3B,KAAAwB,EAAAC,IAGtDhC,EAAAmC,EAAA,GAIAnC,EAAAA,EAAAoC,EAAA,KAAA,CAAAC,GAAA,SAAAlC,OAAAD,QAAAF,qBAAA,aAAAsC,KAAA\",\"sourcesContent\":[\" \\t// The module cache\\n \\tvar installedModules = {};\\n\\n \\t// The require function\\n \\tfunction __webpack_require__(moduleId) {\\n\\n \\t\\t// Check if module is in cache\\n \\t\\tif(installedModules[moduleId]) {\\n \\t\\t\\treturn installedModules[moduleId].exports;\\n \\t\\t}\\n \\t\\t// Create a new module (and put it into the cache)\\n \\t\\tvar module = installedModules[moduleId] = {\\n \\t\\t\\ti: moduleId,\\n \\t\\t\\tl: false,\\n \\t\\t\\texports: {}\\n \\t\\t};\\n\\n \\t\\t// Execute the module function\\n \\t\\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\\n\\n \\t\\t// Flag the module as loaded\\n \\t\\tmodule.l = true;\\n\\n \\t\\t// Return the exports of the module\\n \\t\\treturn module.exports;\\n \\t}\\n\\n\\n \\t// expose the modules object (__webpack_modules__)\\n \\t__webpack_require__.m = modules;\\n\\n \\t// expose the module cache\\n \\t__webpack_require__.c = installedModules;\\n\\n \\t// define getter function for harmony exports\\n \\t__webpack_require__.d = function(exports, name, getter) {\\n \\t\\tif(!__webpack_require__.o(exports, name)) {\\n \\t\\t\\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\\n \\t\\t}\\n \\t};\\n\\n \\t// define __esModule on exports\\n \\t__webpack_require__.r = function(exports) {\\n \\t\\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\\n \\t\\t\\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\\n \\t\\t}\\n \\t\\tObject.defineProperty(exports, '__esModule', { value: true });\\n \\t};\\n\\n \\t// create a fake namespace object\\n \\t// mode & 1: value is a module id, require it\\n \\t// mode & 2: merge all properties of value into the ns\\n \\t// mode & 4: return value when already ns object\\n \\t// mode & 8|1: behave like require\\n \\t__webpack_require__.t = function(value, mode) {\\n \\t\\tif(mode & 1) value = __webpack_require__(value);\\n \\t\\tif(mode & 8) return value;\\n \\t\\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\\n \\t\\tvar ns = Object.create(null);\\n \\t\\t__webpack_require__.r(ns);\\n \\t\\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\\n \\t\\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\\n \\t\\treturn ns;\\n \\t};\\n\\n \\t// getDefaultExport function for compatibility with non-harmony modules\\n \\t__webpack_require__.n = function(module) {\\n \\t\\tvar getter = module && module.__esModule ?\\n \\t\\t\\tfunction getDefault() { return module['default']; } :\\n \\t\\t\\tfunction getModuleExports() { return module; };\\n \\t\\t__webpack_require__.d(getter, 'a', getter);\\n \\t\\treturn getter;\\n \\t};\\n\\n \\t// Object.prototype.hasOwnProperty.call\\n \\t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\\n\\n \\t// __webpack_public_path__\\n \\t__webpack_require__.p = \\\"\\\";\\n\\n\\n \\t// Load entry module and return exports\\n \\treturn __webpack_require__(__webpack_require__.s = 10);\\n\"]}","code":"!function(I){var C={};function g(Q){if(C[Q])return C[Q].exports;var A=C[Q]={i:Q,l:!1,exports:{}};return I[Q].call(A.exports,A,A.exports,g),A.l=!0,A.exports}g.m=I,g.c=C,g.d=function(I,C,Q){g.o(I,C)||Object.defineProperty(I,C,{enumerable:!0,get:Q})},g.r=function(I){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(I,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(I,\"__esModule\",{value:!0})},g.t=function(I,C){if(1&C&&(I=g(I)),8&C)return I;if(4&C&&\"object\"==typeof I&&I&&I.__esModule)return I;var Q=Object.create(null);if(g.r(Q),Object.defineProperty(Q,\"default\",{enumerable:!0,value:I}),2&C&&\"string\"!=typeof I)for(var A in I)g.d(Q,A,function(C){return I[C]}.bind(null,A));return Q},g.n=function(I){var C=I&&I.__esModule?function(){return I.default}:function(){return I};return g.d(C,\"a\",C),C},g.o=function(I,C){return Object.prototype.hasOwnProperty.call(I,C)},g.p=\"\",g(g.s=10)}({10:function(module,exports,__webpack_require__){\"use strict\";eval('\\n\\n/**\\n * CC live video\\n * v2.9.1 2019/01/21 */\\n(function () {\\n  var DELAY_TIME = 10 * 1000;\\n\\n  function isSupportFlash() {\\n    var isIE = navigator.appVersion.indexOf(\"MSIE\") >= 0;\\n    var hasFlash = true;\\n\\n    if (isIE) {\\n      try {\\n        var objFlash = new ActiveXObject(\"ShockwaveFlash.ShockwaveFlash\");\\n      } catch (e) {\\n        hasFlash = false;\\n      }\\n    } else {\\n      if (!navigator.plugins[\"Shockwave Flash\"]) {\\n        hasFlash = false;\\n      }\\n    }\\n\\n    return hasFlash;\\n  }\\n\\n  ; //工具类\\n\\n  var Util = {\\n    sendAjax: function sendAjax(url, data, callBack) {\\n      $.ajax({\\n        url: url,\\n        type: \"GET\",\\n        dataType: \"jsonp\",\\n        data: data,\\n        xhrFields: {\\n          withCredentials: true\\n        },\\n        success: function success(data) {\\n          if (!data.success) {\\n            callBack(data);\\n            return;\\n          }\\n\\n          if (typeof callBack === \"function\") {\\n            callBack(data);\\n          } else {\\n            if (console.log) {\\n              console.log(\"onQuestionnairePublish is undefined\");\\n            }\\n          }\\n        },\\n        error: function error(e) {\\n          if (typeof callBack === \"function\") {\\n            callBack({\\n              errorCode: 1,\\n              msg: \"request error\",\\n              result: e\\n            });\\n          } else {\\n            if (console.log) {\\n              console.log(\"onQuestionnairePublish is undefined\");\\n            }\\n          }\\n        }\\n      });\\n    }\\n  };\\n  var DWDpc = {\\n    DocModeType: {\\n      NormalMode: 0,\\n      FreeMode: 1\\n    },\\n    //设置文档为自由模式或者为跟随模式（0为跟随，1为自由）\\n    dpc: {},\\n    fastMode: false,\\n    init: function init() {\\n      this.dpc = new Dpc();\\n    },\\n    appendDrawPanel: function appendDrawPanel() {\\n      var dp = \"<iframe id=\\\\\"dpa\\\\\" allow-scripts allowfullscreen allowusermedia frameborder=\\\\\"0\\\\\" style=\\\\\"width: 100%;height:100%;\\\\\"></iframe>\";\\n\\n      if (MobileLive.isMobile() == \"isMobile\") {\\n        dp = \"<iframe id=\\\\\"dpa\\\\\" allow-scripts allowfullscreen allowusermedia frameborder=\\\\\"0\\\\\" style=\\\\\"width: 100%;height:100%;pointer-events: none;\\\\\"></iframe>\";\\n      }\\n\\n      $(\"#drawPanel\").parent().append(dp);\\n      $(\"div#drawPanel\").remove();\\n\\n      if (typeof window.on_cc_live_db_flip === \"function\") {\\n        window.on_cc_live_db_flip();\\n      }\\n    },\\n    pageChange: function pageChange(pc) {\\n      if (!this.fastMode) {\\n        return;\\n      }\\n\\n      this.dpc.pageChange(pc);\\n    },\\n    animationChange: function animationChange(ac) {\\n      if (!this.fastMode) {\\n        return;\\n      }\\n\\n      this.dpc.animationChange(ac);\\n    },\\n    history: function history(h) {\\n      if (!this.fastMode) {\\n        return;\\n      }\\n\\n      this.dpc.history(h);\\n    },\\n    draw: function draw(d) {\\n      if (!this.fastMode) {\\n        return;\\n      }\\n\\n      this.dpc.draw(d);\\n    },\\n    clear: function clear() {\\n      if (!this.fastMode) {\\n        return;\\n      }\\n\\n      this.dpc.clear();\\n    },\\n    reload: function reload() {\\n      if (!this.fastMode) {\\n        return;\\n      }\\n\\n      this.dpc.reload();\\n    },\\n    setDocMode: function setDocMode(t) {\\n      if (!this.fastMode) {\\n        return;\\n      }\\n\\n      this.dpc.setFreeDocMode(t);\\n    },\\n    getDocs: function getDocs(callback) {\\n      if (!this.fastMode) {\\n        return;\\n      }\\n\\n      this.dpc.getDocs(DWLive.roomid, DWLive.userid, callback);\\n    },\\n    changePageTo: function changePageTo(dId, pI) {\\n      if (!this.fastMode) {\\n        return;\\n      }\\n\\n      this.dpc.changePageTo(dId, pI);\\n    },\\n    showMarquee: function showMarquee(m) {\\n      if (!this.fastMode) {\\n        return;\\n      }\\n\\n      this.dpc.openMarquee(m);\\n    },\\n    closeMarquee: function closeMarquee() {\\n      if (!this.fastMode) {\\n        return;\\n      }\\n\\n      this.dpc.closeMarquee();\\n    },\\n    openBarrage: function openBarrage(l) {\\n      if (!this.fastMode) {\\n        return;\\n      }\\n\\n      this.dpc.openBarrage();\\n    },\\n    insertBarrage: function insertBarrage(data) {\\n      if (!this.fastMode) {\\n        return;\\n      }\\n\\n      var ifo;\\n\\n      try {\\n        ifo = JSON.parse(data);\\n      } catch (e) {\\n        ifo = {\\n          type: \"text\",\\n          content: data\\n        };\\n      }\\n\\n      this.dpc.insertBarrage(ifo);\\n    },\\n    closeBarrage: function closeBarrage() {\\n      if (!this.fastMode) {\\n        return;\\n      }\\n\\n      this.dpc.closeBarrage();\\n    },\\n    docAdapt: function docAdapt(t) {\\n      if (!this.fastMode) {\\n        return;\\n      }\\n\\n      var displayMode = t ? \"1\" : \"2\";\\n      this.dpc.setDisplayMode(displayMode);\\n    }\\n  };\\n  var DWLive = {\\n    DocModeType: {\\n      NormalMode: 0,\\n      FreeMode: 1\\n    },\\n    //设置文档为自由模式或者为跟随模式（0为跟随，1为自由）\\n    MediaScaleMode: {\\n      scale43: \"4:3\",\\n      scale169: \"16:9\",\\n      scaleFull: \"full\",\\n      scaleNormal: \"normal\"\\n    },\\n    init: function init(option) {\\n      if (typeof option == \"undefined\") {\\n        option = {};\\n      }\\n\\n      this.userid = $.trim(option.userid);\\n      this.roomid = $.trim(option.roomid);\\n      this.groupid = $.trim(option.groupid);\\n      this.viewername = $.trim(option.viewername);\\n      this.viewertoken = $.trim(option.viewertoken);\\n      this.forcibly = $.trim(option.forcibly);\\n      this.viewercustomua = $.trim(option.viewercustomua);\\n      this.language = $.trim(option.language);\\n      this.viewercustominfo = $.trim(option.viewercustominfo);\\n      this.ua = $.trim(option.ua);\\n      this.viewerid = $.trim(option.viewerid);\\n      this.upid = $.trim(option.upid);\\n\\n      if (typeof option.fastMode == \"string\") {\\n        if (option.fastMode === \"false\") {\\n          this.fastMode = false;\\n        } else {\\n          this.fastMode = true;\\n        }\\n      } else if (typeof option.fastMode == \"boolean\") {\\n        this.fastMode = option.fastMode;\\n      } else {\\n        this.fastMode = false;\\n      }\\n\\n      DWDpc.fastMode = this.fastMode;\\n      this.forceNew = false;\\n\\n      if (typeof option.forceNew === \"boolean\") {\\n        this.forceNew = option.forceNew;\\n      }\\n\\n      var _this = this;\\n\\n      var scripts = [\"//static.csslcloud.net/js/socket.io.js\", \"//static.csslcloud.net/js/report.js\"];\\n\\n      if (DWDpc.fastMode) {\\n        scripts.push(\"//image.csslcloud.net/js/dpc.js?v=20180121\");\\n      }\\n\\n      if (MobileLive.isMobile() == \"isMobile\") {\\n        if ($(\"#drawPanel\").length > 0) {\\n          //启动极速动画模式\\n          if (!DWDpc.fastMode) {\\n            scripts.push(\"//static.csslcloud.net/js/module/drawingBoard-2.0.0.js\");\\n          }\\n        }\\n      } else {\\n        if (!isSupportFlash()) {\\n          if (typeof DWLive.onNotSupportFlash === \"function\") {\\n            DWLive.onNotSupportFlash();\\n          }\\n\\n          if (this.userid == \"18452D400D6B81D5\") {\\n            var lpph = $(\"#\" + LivePlayer.id).parent().height();\\n            var lppw = $(\"#\" + LivePlayer.id).parent().width();\\n            var tip = \"<div style=\\\\\"z-index: 999999;\\\\\"><p style=\\\\\"color: #0e0e0e; width: 260px;\\\\\">您还没有安装flash播放器,请点击\" + \"<a href=\\\\\"http://www.adobe.com/go/getflash\\\\\" style=\\\\\"color: red;\\\\\" target=\\\\\"_blank\\\\\">这里\" + \"</a>安装</p></div>\";\\n            $(\"#\" + LivePlayer.id).append(tip).parent().css(\"z-index\", \"999999\");\\n            var lpdh = $($(\"#\" + LivePlayer.id + \" div p\")[0]).height();\\n            var lpdw = $($(\"#\" + LivePlayer.id + \" div p\")[0]).width();\\n            $(\"#\" + LivePlayer.id + \" div\").css({\\n              \"margin-left\": (lppw - lpdw - 60) / 2 + \"px\",\\n              \"margin-top\": (lpph - lpdh) / 2 + \"px\"\\n            });\\n            setInterval(function () {\\n              $(\"#\" + LivePlayer.id).parent().show();\\n            }, 3000);\\n          }\\n        }\\n\\n        scripts.push(\"//static.csslcloud.net/js/swfobject.js\", \"//static.csslcloud.net/js/json3.min.js\");\\n      }\\n\\n      _this.loadScript(scripts, function () {\\n        _this.login(fn);\\n\\n        function fn() {\\n          _this.history = new History();\\n        }\\n\\n        if (MobileLive.isMobile() == \"isMobile\" && $.DrawingBoard) {\\n          var dp = \"<canvas id=\\\\\"drawPanel\\\\\" width=\\\\\"1200\\\\\" height=\\\\\"1200\\\\\" style=\\\\\"position: absolute;z-index:2;top:0;left: 0\\\\\"></canvas>\" + \"<iframe id=\\\\\"dpa\\\\\" src=\\\\\"\\\\\" frameborder=\\\\\"0\\\\\" style=\\\\\"position: absolute;top:0;left: 0\\\\\"></iframe>\";\\n          $(\"#drawPanel\").parent().append(dp);\\n          $(\"div#drawPanel\").remove();\\n          $.DrawingBoard.config();\\n        }\\n      });\\n    },\\n    login: function login(fn) {\\n      $.ajax({\\n        url: \"//view.csslcloud.net/api/room/login\",\\n        type: \"GET\",\\n        dataType: \"jsonp\",\\n        data: {\\n          roomid: this.roomid,\\n          userid: this.userid,\\n          groupid: this.groupid,\\n          viewername: this.viewername,\\n          viewertoken: this.viewertoken,\\n          forcibly: this.forcibly,\\n          viewercustomua: this.viewercustomua,\\n          viewercustominfo: this.viewercustominfo\\n        },\\n        success: function success(data) {\\n          if (!data.success) {\\n            if (typeof DWLive.onLoginError === \"function\") {\\n              DWLive.onLoginError(data);\\n            }\\n\\n            return;\\n          }\\n\\n          var isHttps = window.location.protocol === \"https:\";\\n          var host = data.datas.pusherNode.primary;\\n\\n          if (isHttps && host && host.indexOf(\":\")) {\\n            var s = host.split(\":\");\\n\\n            if (s.length == 2) {\\n              var port = parseInt(s[1]);\\n\\n              if (!isNaN(port)) {\\n                var httpsPort = port + 400;\\n                host = s[0] + \":\" + httpsPort;\\n              }\\n            }\\n          }\\n\\n          var url = document.location.protocol + \"//\" + host + \"/\" + data.datas.pusher.nsp;\\n          var key = data.datas.viewer.key;\\n          Pusher.options.pusherUrl = url;\\n          Pusher.options.key = key;\\n          DWLive.viewerid = data.datas.viewer.id;\\n          DWLive.viewername = data.datas.viewer.name;\\n          DWLive.isBan = data.datas.room.isBan; //禁播\\n\\n          DWLive.liveid = data.datas.liveId;\\n          DWLive.upid = data.datas.upId;\\n          DWLive.multiQuality = data.datas.room.multiQuality;\\n          DWLive.documentDisplayMode = data.datas.room.documentDisplayMode;\\n          DWLive.liveCountdown = data.datas.room.liveCountdown;\\n          DWLive.groupId = data.datas.viewer.groupId; //初始化极速动画对象\\n\\n          if (DWDpc.fastMode) {\\n            $(\"#documentDisplayMode\").val(DWLive.documentDisplayMode);\\n            DWDpc.appendDrawPanel();\\n            DWDpc.init();\\n          }\\n\\n          fn();\\n          var delay = data.datas.room.delayTime,\\n              foreignPublish = data.datas.room.foreignPublish;\\n          LivePlayer.delay = delay;\\n\\n          if (delay <= 0) {\\n            DELAY_TIME = 5 * 1000;\\n          }\\n\\n          LivePlayer.foreignPublish = foreignPublish;\\n          LivePlayer.openHostMode = data.datas.room.openHostMode;\\n          LivePlayer.dvr = data.datas.room.dvr;\\n          LivePlayer.barrageData = data.datas.room.barrage;\\n          LivePlayer.warmVideoId = data.datas.room.encryptWarmVideoId;\\n          LivePlayer.viewerid = data.datas.viewer.id;\\n          var playerBackgroundImageUri = data.datas.room.playerBackgroundImageUri;\\n\\n          if (!playerBackgroundImageUri) {\\n            playerBackgroundImageUri = \"\";\\n          } else {\\n            var isHttps = window.location.protocol === \"https:\";\\n\\n            if (isHttps) {\\n              playerBackgroundImageUri = playerBackgroundImageUri.replace(/http:/g, \"https:\");\\n            }\\n          }\\n\\n          LivePlayer.backgroundImageUri = playerBackgroundImageUri;\\n\\n          if (typeof DWLive.playerBackgroundImageUri === \"function\") {\\n            DWLive.playerBackgroundImageUri(playerBackgroundImageUri);\\n          }\\n\\n          var playerBackgroundHint = data.datas.room.playerBackgroundHint;\\n\\n          if (!playerBackgroundHint) {\\n            playerBackgroundHint = \"\";\\n          }\\n\\n          LivePlayer.backgroundHint = playerBackgroundHint;\\n\\n          if (typeof DWLive.playerBackgroundHint === \"function\") {\\n            DWLive.playerBackgroundHint(playerBackgroundHint);\\n          }\\n\\n          var announcement = data.datas.announcement;\\n\\n          if (typeof DWLive.onAnnouncementShow === \"function\" && announcement) {\\n            DWLive.onAnnouncementShow(announcement);\\n          }\\n\\n          var desc = data.datas.room.desc;\\n\\n          if (typeof DWLive.onLiveDesc === \"function\") {\\n            DWLive.onLiveDesc(desc);\\n          }\\n\\n          var count = data.datas.room.showUserCount;\\n\\n          if (typeof DWLive.showUserCount === \"function\") {\\n            DWLive.showUserCount(count);\\n          }\\n\\n          var marquee = data.datas.viewer.marquee;\\n\\n          if (typeof DWLive.getMarquee === \"function\") {\\n            DWLive.getMarquee(marquee);\\n          }\\n\\n          if (typeof DWLive.onLoginSuccess === \"function\") {\\n            var template = {\\n              \"desc\": data.datas.template.desc,\\n              \"type\": data.datas.template.type,\\n              \"name\": data.datas.template.name,\\n              \"id\": data.datas.template.id\\n            }; //返回给用户的模板信息\\n\\n            var viewer = {\\n              \"id\": data.datas.viewer.id,\\n              \"groupId\": data.datas.viewer.groupId,\\n              \"name\": data.datas.viewer.name\\n            }; //返回给用户的viewer信息;\\n\\n            var live = data.datas.live; //返回给用户的live信息\\n\\n            var loginInfo = {\\n              \"live\": live,\\n              \"template\": template,\\n              \"viewer\": viewer\\n            };\\n            DWLive.onLoginSuccess(loginInfo);\\n          }\\n\\n          var time = data.datas.live;\\n\\n          if (typeof DWLive.onLiveTime === \"function\") {\\n            DWLive.onLiveTime(time);\\n          }\\n\\n          Pusher.init();\\n\\n          if (MobileLive.isMobile() == \"isMobile\") {\\n            MobileLive.init();\\n          } else {\\n            LivePlayer.init();\\n          }\\n\\n          switch (data.datas.template.type) {\\n            case 6:\\n              Qa.init();\\n\\n              DWLive.sendPublicChatMsg = DWLive.sendPrivateChatMsg = function () {\\n                return false;\\n              };\\n\\n              break;\\n\\n            case 5:\\n              Chat.init();\\n              Qa.init();\\n              DrawPanel.init();\\n              break;\\n\\n            case 4:\\n              Chat.init();\\n              DrawPanel.init();\\n\\n              DWLive.sendQuestionMsg = function () {\\n                return false;\\n              };\\n\\n              break;\\n\\n            case 3:\\n              Chat.init();\\n\\n              DWLive.sendQuestionMsg = function () {\\n                return false;\\n              };\\n\\n              break;\\n\\n            case 2:\\n              Chat.init();\\n              Qa.init();\\n              break;\\n\\n            default:\\n              Chat.init();\\n              Qa.init();\\n              DrawPanel.init();\\n          }\\n        }\\n      });\\n    },\\n    logout: function logout(value) {\\n      if (!value) return;\\n      $.ajax({\\n        url: \"//view.csslcloud.net/api/live/logout\",\\n        type: \"GET\",\\n        dataType: \"jsonp\",\\n        timeout: 5000,\\n        xhrFields: {\\n          withCredentials: true\\n        },\\n        success: function success(data) {\\n          if (typeof value.success === \"function\") {\\n            value.success(data);\\n          }\\n        },\\n        error: function error(xhr, status, _error) {\\n          if (typeof value.error === \"function\") {\\n            value.error({\\n              \"errorcode\": \"100\",\\n              \"msg\": \"退出失败\",\\n              \"info\": _error\\n            });\\n          }\\n        }\\n      });\\n      Pusher.socket.disconnect();\\n    },\\n    getScript: function getScript(url, success) {\\n      var readyState = false,\\n          script = document.createElement(\"script\");\\n      script.src = url;\\n\\n      script.onload = script.onreadystatechange = function () {\\n        if (!readyState && (!this.readyState || this.readyState == \"loaded\" || this.readyState == \"complete\")) {\\n          readyState = true;\\n          success && success();\\n        }\\n      };\\n\\n      document.body.appendChild(script);\\n    },\\n    loadScript: function loadScript(res, callback) {\\n      if (typeof res === \"string\") {\\n        var _res = res;\\n        res = [];\\n        res.push(_res);\\n      }\\n\\n      var _this = this,\\n          queue = function queue(fs, cb) {\\n        _this.getScript(fs.shift(), function () {\\n          fs.length ? queue(fs, cb) : cb && cb();\\n        });\\n      };\\n\\n      queue(res, callback);\\n    },\\n    //改名\\n    changeNickname: function changeNickname(name) {\\n      if (!name || typeof name !== \"string\" || name.length > 20) {\\n        return false;\\n      }\\n\\n      Pusher.socket.emit(\"change_nickname\", name);\\n    },\\n    sendPublicChatMsg: function sendPublicChatMsg(msg) {\\n      if (!msg || msg.length > 300) {\\n        return;\\n      }\\n\\n      Pusher.socket.emit(\"chat_message\", msg);\\n    },\\n    sendPrivateChatMsg: function sendPrivateChatMsg(touserid, tousername, msg) {\\n      var h = new Date().getHours(),\\n          m = new Date().getMinutes(),\\n          s = new Date().getSeconds();\\n      m = m > 9 ? m : \"0\" + m;\\n      s = s > 9 ? s : \"0\" + s;\\n      var j = {\\n        \"fromuserid\": this.viewerid,\\n        \"fromusername\": this.viewername,\\n        \"touserid\": touserid,\\n        \"tousername\": tousername,\\n        \"msg\": $.trim(msg),\\n        \"time\": h + \":\" + m + \":\" + s\\n      };\\n      Pusher.socket.emit(\"private_chat\", JSON.stringify(j));\\n    },\\n    sendQuestionMsg: function sendQuestionMsg(content) {\\n      if (!content || content.length > 300) {\\n        return;\\n      }\\n\\n      var j = {\\n        \"action\": \"question\",\\n        \"value\": {\\n          \"userId\": this.viewerid,\\n          \"userName\": this.viewername,\\n          \"content\": content\\n        }\\n      };\\n\\n      try {\\n        Pusher.socket.emit(\"question\", JSON.stringify(j));\\n      } catch (e) {}\\n    },\\n    barrage: function barrage(msg, color) {\\n      // 移动H5暂不支持弹幕功能\\n      if (MobileLive.isMobile() == \"isMobile\") {\\n        return;\\n      }\\n\\n      var newm = $.trim(msg);\\n\\n      if (!newm) {\\n        return;\\n      }\\n\\n      newm = msg.replace(/\\\\[em2?_([0-9]*)\\\\]/g, \"\");\\n      LivePlayer.barrage({\\n        \"txt\": newm,\\n        \"color\": color == null ? 0xffffff : color\\n      });\\n    },\\n    getLine: function getLine() {\\n      if (MobileLive.isMobile() == \"isMobile\") {\\n        var l = MobileLive.src;\\n        return l;\\n      } else {\\n        return LivePlayer.getLine();\\n      }\\n    },\\n    changeLine: function changeLine(line) {\\n      if (MobileLive.isMobile() == \"isMobile\") {\\n        MobileLive.changeLine(line);\\n      } else {\\n        LivePlayer.changeLine(line);\\n      }\\n    },\\n    onlyAudio: function onlyAudio() {\\n      if (MobileLive.isMobile() == \"isMobile\") {\\n        MobileLive.onlyAudio();\\n      } else {\\n        LivePlayer.onlyAudio();\\n      }\\n    },\\n    changeVideoScale: function changeVideoScale(t) {\\n      if (MobileLive.isMobile() != \"isMobile\") {\\n        LivePlayer.changeVideoScale(t);\\n      }\\n    },\\n    setSound: function setSound(n) {\\n      if (MobileLive.isMobile() == \"isMobile\") {\\n        return;\\n      }\\n\\n      LivePlayer.setSound(n);\\n    },\\n    answerRollcall: function answerRollcall(rid, pid) {\\n      var j = {\\n        \"rollcallId\": rid,\\n        \"userId\": this.viewerid,\\n        \"userName\": this.viewername,\\n        \"publisherId\": pid\\n      };\\n      Pusher.socket.emit(\"answer_rollcall\", JSON.stringify(j));\\n    },\\n    replyVote: function replyVote(voteid, option, pid) {\\n      var j = {\\n        \"voteId\": voteid,\\n        \"voteOption\": option,\\n        \"publisherId\": pid\\n      };\\n      Pusher.socket.emit(\"reply_vote\", JSON.stringify(j));\\n    },\\n    docBarrage: function docBarrage(msg, color) {\\n      if (!$.trim(msg)) {\\n        return;\\n      }\\n\\n      DrawPanel.barrage({\\n        \"txt\": msg,\\n        \"color\": color == null ? 0xffffff : color\\n      });\\n    },\\n    openBarrage: function openBarrage(b) {\\n      LivePlayer.openBarrage(b);\\n    },\\n    openDocBarrage: function openDocBarrage(l) {\\n      //开启doc弹幕功能\\n      if (MobileLive.isMobile() == \"isMobile\") {\\n        return;\\n      }\\n\\n      if (DWDpc.fastMode) {\\n        DWDpc.openBarrage(l);\\n      }\\n    },\\n    insertDocBarrage: function insertDocBarrage(data) {\\n      //插入弹幕\\n      if (MobileLive.isMobile() == \"isMobile\") {\\n        return;\\n      }\\n\\n      if (DWDpc.fastMode) {\\n        DWDpc.insertBarrage(data);\\n      }\\n    },\\n    closeDocBarrage: function closeDocBarrage() {\\n      //关闭弹幕功能\\n      if (MobileLive.isMobile() == \"isMobile\") {\\n        return;\\n      }\\n\\n      if (DWDpc.fastMode) {\\n        DWDpc.closeBarrage();\\n      }\\n    },\\n    showControl: function showControl(b) {\\n      LivePlayer.showControl(b);\\n    },\\n    livePlayerInit: function livePlayerInit() {\\n      LivePlayer.init();\\n    },\\n    openSound: function openSound() {\\n      LivePlayer.openSound();\\n    },\\n    closeSound: function closeSound() {\\n      LivePlayer.closeSound();\\n    },\\n    docAdapt: function docAdapt(t) {\\n      if (DWDpc.fastMode) {\\n        DWDpc.docAdapt(t);\\n      } else {\\n        live.adapt = t;\\n      }\\n    },\\n    // 请求语音互动\\n    requestInteraction: function requestInteraction(t) {\\n      live.interaction.requestInteraction(t);\\n    },\\n    // 挂断双向视频\\n    hangupInteraction: function hangupInteraction() {\\n      live.interaction.hangupInteraction();\\n    },\\n    // 进入互动房间\\n    enterInteractionRoom: function enterInteractionRoom(callback) {\\n      var err = undefined;\\n\\n      try {\\n        Pusher.socket.emit(\"speak_enter\");\\n      } catch (e) {\\n        err = e;\\n      } finally {\\n        if (typeof callback === \"function\") callback(err);\\n      }\\n    },\\n    // 发送互动信息\\n    sendInteractionMessage: function sendInteractionMessage(p, toId, event, data, callback) {\\n      var type = \"audio\";\\n\\n      if (p.video) {\\n        type = \"audiovideo\";\\n      }\\n\\n      var j = {\\n        type: type,\\n        fromname: this.viewername,\\n        fromid: this.viewerid,\\n        fromrole: \"student\",\\n        toid: toId,\\n        event: event,\\n        data: JSON.stringify(data)\\n      };\\n      var err = undefined;\\n\\n      try {\\n        Pusher.socket.emit(\"speak_message\", JSON.stringify(j));\\n      } catch (e) {\\n        err = e;\\n      } finally {\\n        if (typeof callback === \"function\") callback(err);\\n      }\\n    },\\n    // 跑马灯\\n    showMarquee: function showMarquee(m) {\\n      LivePlayer.showMarquee(m);\\n    },\\n    closeMarquee: function closeMarquee() {\\n      LivePlayer.closeMarquee();\\n    },\\n    showMarqueeDoc: function showMarqueeDoc(m) {\\n      if (DWDpc.fastMode) {\\n        DWDpc.showMarquee(m);\\n      } else {\\n        DrawPanel.showMarquee(m);\\n      }\\n    },\\n    closeMarqueeDoc: function closeMarqueeDoc() {\\n      if (DWDpc.fastMode) {\\n        DWDpc.closeMarquee();\\n      }\\n    },\\n    setDocMode: function setDocMode(t) {\\n      if (!DWDpc.fastMode) {\\n        return;\\n      }\\n\\n      DWDpc.setDocMode(t);\\n    },\\n    getDocs: function getDocs(callback) {\\n      if (!DWDpc.fastMode) {\\n        return;\\n      }\\n\\n      DWDpc.getDocs(callback);\\n    },\\n    changePageTo: function changePageTo(dId, pI) {\\n      if (!DWDpc.fastMode) {\\n        return;\\n      }\\n\\n      DWDpc.changePageTo(dId, pI);\\n    },\\n    // 用户问卷功能提交接口（data -> {\"subjectsAnswer\":[{\"subjectId\":\"D4D648931609E9B9\",\"selectedOptionId\":\"306B84236FBD561E\"},{\"subjectId\":\"3FFFF7EC39BC96CC\",\"selectedOptionIds\":\"C5E59BBB4FBD975C,BE571C8FC644B1E1\"},{\"subjectId\":\"3CFA9D81528D476B\",\"answerContent\":\"asdasdasd\"}],questionnaireId:\\'0EDEEC4D0321974B\\'};\\n    // callBack->回调返回所有数据）\\n    submitQuestionnaire: function submitQuestionnaire(_data, callBack) {\\n      if (!_data) {\\n        return;\\n      }\\n\\n      var params = {\\n        questionnaireid: _data.questionnaireId,\\n        answers: JSON.stringify({\\n          subjectsAnswer: _data.subjectsAnswer\\n        })\\n      };\\n      $.ajax({\\n        url: \"//eva.csslcloud.net/api/questionnaire/submit\",\\n        type: \"GET\",\\n        dataType: \"jsonp\",\\n        timeout: 5000,\\n        data: params,\\n        xhrFields: {\\n          withCredentials: true\\n        },\\n        success: function success(data) {\\n          if (callBack) {\\n            callBack(data);\\n          } else {\\n            if (console.log) {\\n              console.log(\"no callback\");\\n            }\\n          }\\n        },\\n        error: function error(xhr, status, _error2) {\\n          if (callBack) {\\n            callBack({\\n              errorCode: 1,\\n              msg: \"request was aborted\",\\n              result: _error2\\n            });\\n          }\\n        }\\n      });\\n    },\\n    getPublishingQuestionnaire: function getPublishingQuestionnaire() {\\n      var path = \"//eva.csslcloud.net/api/questionnaire/info\";\\n      var info = {};\\n      Util.sendAjax(path, info, DWLive.onQuestionnairePublish);\\n    },\\n    //获取随堂测数据\\n    getPracticeInfo: function getPracticeInfo(pId, callBack) {\\n      var path = \"//eva.csslcloud.net/api/practice/info\";\\n      var info = {\\n        practiceId: pId,\\n        sessionId: Pusher.options.key\\n      };\\n      Util.sendAjax(path, info, callBack);\\n    },\\n    //提交随堂测\\n    submitPracticeInfo: function submitPracticeInfo(pId, opt, callback) {\\n      var path = \"//eva.csslcloud.net/api/practice/submit\";\\n      var info = {\\n        practiceId: pId,\\n        options: opt,\\n        sessionId: Pusher.options.key\\n      };\\n      Util.sendAjax(path, info, callback);\\n    },\\n    //获取随堂测统计信息接口API\\n    getPracticeStatisInfo: function getPracticeStatisInfo(pId, callback) {\\n      var path = \"//eva.csslcloud.net/api/practice/statis\";\\n      var info = {\\n        practiceId: pId,\\n        sessionId: Pusher.options.key\\n      };\\n      Util.sendAjax(path, info, callback);\\n    },\\n    //获取排名数据接口\\n    getPracticeRanking: function getPracticeRanking(pId, callback) {\\n      var path = \"//eva.csslcloud.net/api/practice/ranking\"; // var path = \"http://192.168.202.183:8080/api/practice/ranking\";\\n\\n      var info = {\\n        practiceId: pId,\\n        sessionId: Pusher.options.key\\n      };\\n      Util.sendAjax(path, info, callback);\\n    }\\n  };\\n  var options = {\\n    init: function init() {\\n      this[\"userId\"] = DWLive.userid, this[\"roomId\"] = DWLive.roomid, this[\"groupId\"] = DWLive.groupId, this[\"liveId\"] = DWLive.liveid, this[\"viewerId\"] = DWLive.viewerid, this[\"upId\"] = DWLive.upid;\\n    }\\n  }; // Pusher\\n\\n  var Pusher = {\\n    options: {\\n      pusherUrl: \"\",\\n      key: \"\",\\n      maxMessageCount: 300,\\n      // 保存聊天条数\\n      userId: \"\",\\n      roomId: \"\",\\n      livePlayerId: \"\",\\n      drawPanel: \"\"\\n    },\\n    drawjson: [],\\n    pagechangedata: [],\\n    init: function init() {\\n      var t = MobileLive.isMobile() == \"isMobile\" ? 1 : 0;\\n\\n      if (!DWLive.forceNew) {\\n        this.socket = io.connect(this.options.pusherUrl, {\\n          query: {\\n            sessionid: Pusher.options.key,\\n            platform: 1,\\n            terminal: t\\n          }\\n        });\\n        debug(\"forceNew: false\");\\n      } else {\\n        this.socket = io.connect(this.options.pusherUrl + \"?sessionid=\" + Pusher.options.key + \"&platform=\" + 1 + \"&terminal=\" + t, {\\n          forceNew: true\\n        });\\n        debug(\"forceNew: true\");\\n      }\\n\\n      this.bind();\\n    },\\n    bind: function bind() {\\n      var currentLayout = false;\\n      this.socket.on(\"connect\", function () {\\n        if (typeof window.onSocketConnect === \"function\") {\\n          window.onSocketConnect();\\n        }\\n      });\\n      this.socket.on(\"disconnect\", function () {\\n        if (typeof window.onSocketDisconnect === \"function\") {\\n          window.onSocketDisconnect();\\n        }\\n      }); // 翻页回调\\n\\n      this.socket.on(\"page_change\", function (j) {\\n        if (j && typeof j === \"string\") {\\n          Pusher.pagechangedata.push(JSON.parse(j));\\n        }\\n\\n        if (typeof window.on_cc_live_dw_page_change === \"function\") {\\n          window.on_cc_live_dw_page_change(j);\\n        }\\n\\n        if (typeof DWLive.onPageChange === \"function\") {\\n          var obj = JSON.parse(j);\\n          var data = {\\n            docId: obj.value.docid,\\n            docName: obj.value.fileName,\\n            docTotalPage: obj.value.totalPage,\\n            pageNum: obj.value.page\\n          };\\n          DWLive.onPageChange(data);\\n        }\\n      }); // 改名\\n\\n      this.socket.on(\"change_nickname\", function (j) {\\n        DWLive.viewername = j;\\n\\n        if (typeof DWLive.onChangeNickname === \"function\") {\\n          DWLive.onChangeNickname(j);\\n        }\\n      }); // 动画翻页\\n\\n      this.socket.on(\"animation_change\", function (j) {\\n        if (typeof window.on_cc_live_dw_animation_change === \"function\") {\\n          window.on_cc_live_dw_animation_change(j);\\n        }\\n      }); // 画板回调\\n\\n      this.socket.on(\"draw\", function (j) {\\n        if (j && typeof j === \"string\") {\\n          Pusher.drawjson.push(JSON.parse(j));\\n        }\\n\\n        if (typeof window.on_cc_live_dw_draw === \"function\") {\\n          window.on_cc_live_dw_draw(j);\\n        }\\n      });\\n      this.socket.on(\"room_user_count\", function (j) {\\n        if (typeof DWLive.onUserCountMessage === \"function\") {\\n          DWLive.onUserCountMessage(j);\\n        }\\n      });\\n      this.socket.on(\"publish_stream\", function (j) {\\n        if (LivePlayer) {\\n          LivePlayer.isPublishing = 1;\\n        }\\n\\n        if (LivePlayer && LivePlayer.start) {\\n          LivePlayer.start();\\n        }\\n\\n        if (typeof DWLive.onLiveStart === \"function\") {\\n          DWLive.onLiveStart(j);\\n        }\\n      });\\n      this.socket.on(\"end_stream\", function (j) {\\n        setTimeout(function () {\\n          if (LivePlayer) {\\n            LivePlayer.isPublishing = 0;\\n          }\\n\\n          if (LivePlayer && LivePlayer.end) {\\n            LivePlayer.end();\\n          }\\n\\n          if (DrawPanel && DrawPanel.clear) {\\n            DrawPanel.clear();\\n          }\\n\\n          DWDpc.clear();\\n\\n          if (typeof DWLive.onLiveEnd === \"function\") {\\n            DWLive.onLiveEnd(j);\\n          }\\n        }, getDelayTime());\\n      });\\n      this.socket.on(\"kick_out\", function (j) {\\n        Pusher.socket.disconnect();\\n\\n        if (typeof DWLive.onKickOut === \"function\") {\\n          DWLive.onKickOut(j);\\n        }\\n\\n        if (!MobileLive.isIPad() && !MobileLive.isIPhone() && !MobileLive.isAndroid() && !MobileLive.isWindowsPhone()) {\\n          LivePlayer.getFlash()._kickOff();\\n        }\\n      });\\n      this.socket.on(\"announcement\", function (data) {\\n        data = toJson(data);\\n\\n        if (data.action == \"release\") {\\n          if (typeof DWLive.onAnnouncementRelease === \"function\") {\\n            DWLive.onAnnouncementRelease(data.announcement);\\n          }\\n        } else if (data.action == \"remove\") {\\n          if (typeof DWLive.onAnnouncementRemove === \"function\") {\\n            DWLive.onAnnouncementRemove(data);\\n          }\\n        }\\n      }); // 签到功能\\n\\n      this.socket.on(\"start_rollcall\", function (data) {\\n        data = toJson(data);\\n\\n        if (typeof DWLive.onStartRollCall === \"function\") {\\n          DWLive.onStartRollCall(data);\\n        }\\n      }); // 开始抽奖\\n\\n      this.socket.on(\"start_lottery\", function (data) {\\n        data = toJson(data);\\n\\n        if (typeof DWLive.onStartLottery === \"function\") {\\n          DWLive.onStartLottery(data);\\n        }\\n      }); // 中奖\\n\\n      this.socket.on(\"win_lottery\", function (data) {\\n        data = toJson(data);\\n\\n        if (typeof DWLive.onWinLottery === \"function\") {\\n          DWLive.onWinLottery(data);\\n        }\\n      }); // 结束抽奖\\n\\n      this.socket.on(\"stop_lottery\", function (data) {\\n        data = toJson(data);\\n\\n        if (typeof DWLive.onStopLottery === \"function\") {\\n          DWLive.onStopLottery(data);\\n        }\\n      }); // 开始答题\\n\\n      this.socket.on(\"start_vote\", function (data) {\\n        data = toJson(data);\\n\\n        if (typeof DWLive.onStartVote === \"function\") {\\n          DWLive.onStartVote(data);\\n        }\\n      }); // 结束答题\\n\\n      this.socket.on(\"stop_vote\", function (data) {\\n        data = toJson(data);\\n\\n        if (typeof DWLive.onStopVote === \"function\") {\\n          DWLive.onStopVote(data);\\n        }\\n      }); // 答题结果\\n\\n      this.socket.on(\"vote_result\", function (data) {\\n        data = toJson(data);\\n\\n        if (typeof DWLive.onVoteResult === \"function\") {\\n          DWLive.onVoteResult(data);\\n        }\\n      }); // 禁播\\n\\n      this.socket.on(\"ban_stream\", function (data) {\\n        data = toJson(data); //h5禁播\\n\\n        DWLive.isBan = 1;\\n\\n        if (MobileLive.isMobile() == \"isMobile\") {\\n          MobileLive.ban();\\n        } else {\\n          LivePlayer.banLive();\\n        }\\n\\n        if (typeof DWLive.onBanStream === \"function\") {\\n          DWLive.onBanStream(data);\\n        }\\n      }); // 解禁\\n\\n      this.socket.on(\"unban_stream\", function (data) {\\n        data = toJson(data); //h5解禁\\n\\n        DWLive.isBan = 0;\\n\\n        if (MobileLive.isMobile() == \"isMobile\") {\\n          MobileLive.unban();\\n        } else {\\n          LivePlayer.unbanLive();\\n        }\\n\\n        if (typeof DWLive.onUnBanStream === \"function\") {\\n          DWLive.onUnBanStream(data);\\n        }\\n      });\\n      this.socket.on(\"room_setting\", function (data) {\\n        data = toJson(data);\\n\\n        if (typeof DWLive.onRoomSetting === \"function\") {\\n          DWLive.onRoomSetting(data);\\n        }\\n\\n        if (data.layout_video_main != currentLayout) {\\n          var main = data.layout_video_main;\\n\\n          if (typeof DWLive.onSwitchVideoDoc === \"function\") {\\n            DWLive.onSwitchVideoDoc(main);\\n          }\\n\\n          currentLayout = main;\\n        }\\n      }); //禁言某人发送信息回调\\n\\n      this.socket.on(\"silence_user_chat_message\", function (data) {\\n        if (typeof DWLive.onSilenceUserChatMessage === \"function\") {\\n          DWLive.onSilenceUserChatMessage(toJson(data));\\n        }\\n      }); // 讲师接受互动信息\\n\\n      this.socket.on(\"accept_speak\", function (data) {\\n        if (typeof window.on_cc_live_accept_interaction === \"function\") {\\n          window.on_cc_live_accept_interaction(toJson(data));\\n        }\\n      }); // 互动信息\\n\\n      this.socket.on(\"speak_message\", function (data) {\\n        if (typeof window.on_cc_live_interaction_message === \"function\") {\\n          window.on_cc_live_interaction_message(toJson(data));\\n        }\\n      }); // 已经在聊天的列表信息\\n\\n      this.socket.on(\"speak_peer_list\", function (data) {\\n        if (typeof window.on_cc_live_interaction_chatusers === \"function\") {\\n          window.on_cc_live_interaction_chatusers(toJson(data));\\n        }\\n      }); // 挂断互动信息\\n\\n      this.socket.on(\"speak_disconnect\", function (data) {\\n        if (typeof window.on_cc_live_interaction_disconnect === \"function\") {\\n          window.on_cc_live_interaction_disconnect(toJson(data));\\n        }\\n      }); // 广播信息\\n\\n      this.socket.on(\"broadcast_msg\", function (data) {\\n        if (typeof DWLive.onBroadcastMsg === \"function\") {\\n          DWLive.onBroadcastMsg(toJson(data).value);\\n        }\\n      }); // 发布提问\\n\\n      this.socket.on(\"publish_question\", function (data) {\\n        if (typeof DWLive.onQaPublish === \"function\") {\\n          DWLive.onQaPublish(toJson(data));\\n        }\\n      });\\n      /**\\n       * 发布问卷\\n       * */\\n\\n      this.socket.on(\"questionnaire_publish\", function (data) {\\n        data = toJson(data);\\n\\n        if (typeof DWLive.onQuestionnairePublish === \"function\") {\\n          DWLive.onQuestionnairePublish(data);\\n        }\\n      });\\n      /**\\n       * 结束发布问卷\\n       * */\\n\\n      this.socket.on(\"questionnaire_publish_stop\", function (data) {\\n        data = toJson(data);\\n\\n        if (typeof DWLive.onQuestionnairePublishStop === \"function\") {\\n          DWLive.onQuestionnairePublishStop(data);\\n        }\\n      }); //发布随堂测功能\\n\\n      this.socket.on(\"practice_publish\", function (data) {\\n        data = toJson(data);\\n\\n        if (typeof DWLive.onPracticePublish === \"function\") {\\n          DWLive.onPracticePublish(data);\\n        }\\n      }); //停止发布随堂测功能\\n\\n      this.socket.on(\"practice_stop\", function (data) {\\n        data = toJson(data);\\n\\n        if (typeof DWLive.onPracticePublishStop === \"function\") {\\n          DWLive.onPracticePublishStop(data);\\n        }\\n      }); //关闭随堂测功能\\n\\n      this.socket.on(\"practice_close\", function (data) {\\n        data = toJson(data);\\n\\n        if (typeof DWLive.onPracticeClose === \"function\") {\\n          DWLive.onPracticeClose(data);\\n        }\\n      }); // 发布奖杯\\n\\n      this.socket.on(\"prize_send\", function (data) {\\n        data = toJson(data);\\n\\n        if (typeof DWLive.onPrizeSend === \"function\") {\\n          DWLive.onPrizeSend(data);\\n        }\\n      });\\n      /**\\n       * 发布问卷统计\\n       * */\\n\\n      this.socket.on(\"questionnaire_publish_statis\", function (data) {\\n        data = toJson(data);\\n\\n        if (typeof DWLive.onQuestionnairePublishStatis === \"function\") {\\n          DWLive.onQuestionnairePublishStatis(data);\\n        }\\n      });\\n      this.socket.on(\"room_teachers\", function (data) {\\n        if (typeof DWLive.onOnlineTeachers === \"function\") {\\n          DWLive.onOnlineTeachers(toJson(data));\\n        }\\n      });\\n      this.socket.on(\"external_questionnaire_publish\", function (data) {\\n        if (typeof DWLive.onExternalQuestionnairePublish === \"function\") {\\n          DWLive.onExternalQuestionnairePublish(toJson(data));\\n        }\\n      });\\n      this.socket.on(\"ban_chat\", function (data) {\\n        if (typeof DWLive.onBanChat === \"function\") {\\n          DWLive.onBanChat(toJson(data));\\n        }\\n      });\\n      this.socket.on(\"unban_chat\", function (data) {\\n        if (typeof DWLive.onUnBanChat === \"function\") {\\n          DWLive.onUnBanChat(toJson(data));\\n        }\\n      });\\n      /**\\n       * 获取当前播放（数据源）场景（0：无意义(默认)，10、11:（开启/关闭）摄像头，20：图片，30：插播视频，40：区域捕获，50：桌面共享，60：自定义场景）\\n       * **/\\n\\n      this.socket.on(\"switch_source\", function (data) {\\n        if (typeof DWLive.onSwitchSource === \"function\") {\\n          DWLive.onSwitchSource(data);\\n        }\\n      });\\n\\n      var _this = this;\\n\\n      setTimeout(function () {\\n        try {\\n          _this.socket.emit(\"room_user_count\");\\n        } catch (e) {}\\n\\n        try {\\n          _this.socket.emit(\"room_teachers\");\\n        } catch (e) {}\\n      }, 1500);\\n      setInterval(function () {\\n        try {\\n          _this.socket.emit(\"room_user_count\");\\n        } catch (e) {}\\n\\n        try {\\n          _this.socket.emit(\"room_teachers\");\\n        } catch (e) {}\\n      }, 15000);\\n    },\\n    // 请求互动\\n    requestInteraction: function requestInteraction(p, callback) {\\n      var t = \"audio\";\\n\\n      if (p.video) {\\n        t += \"video\";\\n      }\\n\\n      var j = {\\n        \"viewerId\": DWLive.viewerid,\\n        \"viewerName\": DWLive.viewername,\\n        \"type\": t\\n      };\\n      var err = undefined;\\n\\n      try {\\n        this.socket.emit(\"request_speak\", JSON.stringify(j));\\n      } catch (e) {\\n        err = e;\\n      } finally {\\n        if (typeof callback === \"function\") callback(err);\\n      }\\n    },\\n    // 取消申请\\n    cancelRequestInteraction: function cancelRequestInteraction(type, callback) {\\n      var j = {\\n        \"viewerId\": this.viewerid,\\n        \"viewerName\": this.viewername,\\n        \"type\": type\\n      };\\n      debug(\"interaction\", \"取消申请：\" + JSON.stringify(j));\\n      var err = undefined;\\n\\n      try {\\n        this.socket.emit(\"cancel_request_speak\", JSON.stringify(j));\\n      } catch (e) {\\n        err = e;\\n      } finally {\\n        if (typeof callback === \"function\") callback(err);\\n      }\\n    },\\n    //挂断互动\\n    hangupInteraction: function hangupInteraction(type, callback) {\\n      var j = {\\n        \"viewerId\": DWLive.viewerid,\\n        \"viewerName\": DWLive.viewername,\\n        \"type\": type\\n      };\\n      debug(\"interaction\", \"挂断事件：\" + JSON.stringify(j));\\n      var err = undefined;\\n\\n      try {\\n        this.socket.emit(\"hangup_interaction\", JSON.stringify(j));\\n      } catch (e) {\\n        err = e;\\n      } finally {\\n        if (typeof callback === \"function\") callback(err);\\n      }\\n    }\\n  };\\n  /**\\n   * 语音互动支持\\n   *\\n   * */\\n\\n  var Interaction = function Interaction(opts) {\\n    try {\\n      window.PeerConnection = window.PeerConnection || window.webkitPeerConnection00 || window.webkitRTCPeerConnection || window.mozRTCPeerConnection;\\n      window.URL = window.URL || window.webkitURL || window.msURL || window.oURL;\\n      window.getUserMedia = navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia || navigator.msGetUserMedia;\\n      window.nativeRTCIceCandidate = window.mozRTCIceCandidate || window.RTCIceCandidate;\\n      window.nativeRTCSessionDescription = window.mozRTCSessionDescription || window.RTCSessionDescription;\\n    } catch (e) {}\\n\\n    this.usersPcs = {\\n      length: 0\\n    }; // 本地流信息\\n\\n    this.local = {\\n      type: {\\n        video: false,\\n        audio: false\\n      },\\n      video: {},\\n      audio: {}\\n    };\\n    this.isRequesting = false;\\n    /**\\n     * 请求语音互动\\n     *\\n     * t = {\\n     *  video: true,\\n     *  audio: true\\n     * }\\n     * */\\n\\n    this.requestInteraction = function (t, callback) {\\n      debug(\"Interaction\", \"请求互动\");\\n      this.local.type = t;\\n      this.isRequesting = true; // 请求互动超时计时器\\n\\n      this.setRequestTimeoutTimer(); // 创建音视频信息\\n\\n      this.createLocalMedia(function (error) {\\n        if (error) {\\n          if (typeof window.on_cc_live_interaction_error === \"function\") {\\n            window.on_cc_live_interaction_error(live.interaction.local.type, error, \"创建音视频信息出错\");\\n          }\\n\\n          return;\\n        }\\n\\n        Pusher.requestInteraction(t, callback);\\n      });\\n    }; // 语音通话计时器\\n\\n\\n    this.setCallingTimer = function () {\\n      live.interaction.interactionTime = 0;\\n      live.interaction.interactionTimeInterval = setInterval(function () {\\n        ++live.interaction.interactionTime;\\n\\n        if (typeof window.on_cc_live_interaction_interval === \"function\") {\\n          var p = live.interaction.local.type;\\n          var t = live.interaction.interactionTime;\\n          window.on_cc_live_interaction_interval(p, t);\\n        }\\n      }, 1000);\\n    }; // 清除语音通话计时器\\n\\n\\n    this.clearCallingTimer = function () {\\n      live.interaction.interactionTime = 0;\\n      clearInterval(live.interaction.interactionTimeInterval);\\n    }; // 互动请求超时定时器\\n\\n\\n    this.setRequestTimeoutTimer = function () {\\n      /**\\n       * 请求互动，60s内没有接受，则自动断开\\n       *\\n       * 通知pusher断开\\n       * */\\n      live.interaction.REQUEST_INTERACTION_TIMEOUT = setTimeout(function () {\\n        live.interaction.REQUEST_INTERACTION_TIMEOUT = -1; // 超时挂断语音通话\\n\\n        live.interaction.hangupInteraction(DWLive.viewerid);\\n        live.interaction.stopLocalStream();\\n        live.interaction.isRequesting = false;\\n        $(\"#interactionLocalVideo\")[0].src = \"\";\\n        $(\"#videoInteraction\").hide();\\n\\n        if (typeof window.on_cc_live_interaction_request_timeout === \"function\") {\\n          window.on_cc_live_interaction_request_timeout(live.interaction.local.type);\\n        }\\n      }, 60000);\\n    }; // 清空互动请求超时定时器\\n\\n\\n    this.clearRequestTimeoutTimer = function () {\\n      if (live.interaction.REQUEST_INTERACTION_TIMEOUT > 0) {\\n        clearTimeout(live.interaction.REQUEST_INTERACTION_TIMEOUT);\\n        live.interaction.REQUEST_INTERACTION_TIMEOUT = -1;\\n      }\\n    }; // 停止本地流\\n\\n\\n    this.stopLocalStream = function () {\\n      if (live.interaction.local.video.stream) {\\n        try {\\n          live.interaction.local.video.stream.getTracks().forEach(function (track) {\\n            track.stop();\\n          });\\n        } catch (e) {}\\n      }\\n\\n      if (live.interaction.local.audio.stream) {\\n        try {\\n          live.interaction.local.audio.stream.getTracks().forEach(function (track) {\\n            track.stop();\\n          });\\n        } catch (e) {}\\n      }\\n    };\\n\\n    this.cancelInteraction = function () {\\n      live.interaction.isRequesting = false;\\n\\n      if (typeof window.on_cc_live_interaction_cancal === \"function\") {\\n        window.on_cc_live_interaction_cancal(live.interaction.local.type);\\n      }\\n    }; // 断开连接\\n\\n\\n    this.disconnectInteraction = function (uId) {\\n      DWLive.openSound();\\n      this.clearRequestTimeoutTimer(); // 删除所有\\n\\n      if (uId == DWLive.viewerid) {\\n        $.each(live.interaction.usersPcs, function (userId, up) {\\n          var pc = up.pc;\\n\\n          if (pc == null) {\\n            return true;\\n          }\\n\\n          pc.close();\\n          pc = null;\\n\\n          if (live.interaction.usersPcs[userId]) {\\n            delete live.interaction.usersPcs[userId];\\n            var l = live.interaction.usersPcs.length - 1;\\n            live.interaction.usersPcs.length = l < 0 ? 0 : l;\\n          }\\n        });\\n      } else {\\n        $.each(live.interaction.usersPcs, function (userId, up) {\\n          var pc = up.pc;\\n\\n          if (!pc) {\\n            return true;\\n          }\\n\\n          if (userId != uId) {\\n            return true;\\n          }\\n\\n          pc.close();\\n          pc = null;\\n\\n          if (live.interaction.usersPcs[userId]) {\\n            delete live.interaction.usersPcs[userId];\\n            var l = live.interaction.usersPcs.length - 1;\\n            live.interaction.usersPcs.length = l < 0 ? 0 : l;\\n          }\\n        });\\n      }\\n\\n      if (live.interaction.usersPcs.length == 0) {\\n        this.stopLocalStream();\\n      }\\n\\n      live.interaction.isInteractioning = false;\\n      live.interaction.isRequesting = false;\\n    }; // 创建本地音视频流\\n\\n\\n    this.createLocalAudioAndVideoMedia = function (c) {\\n      var that = this;\\n      getUserMedia.call(navigator, {\\n        video: true,\\n        audio: true\\n      }, function (stream) {\\n        that.local.video.stream = stream;\\n\\n        if (c && typeof c === \"function\") {\\n          c(stream);\\n        }\\n      }, function (error) {\\n        debug(\"Interaction\", \"getUserMedia error: \" + error);\\n\\n        if (c && typeof c === \"function\") {\\n          c(error);\\n        }\\n      });\\n    }; // 创建本地音频流\\n\\n\\n    this.createLocalAudioMedia = function (c) {\\n      var that = this;\\n      getUserMedia.call(navigator, {\\n        video: false,\\n        audio: true\\n      }, function (stream) {\\n        that.local.audio.stream = stream;\\n\\n        if (c && typeof c === \"function\") {\\n          c(stream);\\n        }\\n      }, function (error) {\\n        debug(\"Interaction\", \"getUserMedia error: \" + error);\\n\\n        if (c && typeof c === \"function\") {\\n          c(error);\\n        }\\n      });\\n    };\\n\\n    this.createLocalMedia = function (c) {\\n      var that = this;\\n      var p = that.local.type;\\n      getUserMedia.call(navigator, p, function (stream) {\\n        if (p.video) {\\n          that.local.video.stream = stream;\\n        } else {\\n          that.local.audio.stream = stream;\\n        }\\n\\n        if (typeof window.on_cc_live_interaction_local_media === \"function\") {\\n          window.on_cc_live_interaction_local_media(p, stream);\\n        }\\n\\n        if (c && typeof c === \"function\") {\\n          c();\\n        }\\n      }, function (error) {\\n        debug(\"Interaction\", \"getUserMedia error: \" + error);\\n\\n        if (c && typeof c === \"function\") {\\n          c(error);\\n        }\\n      });\\n    };\\n\\n    this.iceServers = {\\n      \"iceServers\": [{\\n        url: \"stun:turn.csslcloud.net:3478\",\\n        credential: \"bokecc\",\\n        username: \"cc\"\\n      }, {\\n        url: \"turn:turn.csslcloud.net:3478\",\\n        credential: \"bokecc\",\\n        username: \"cc\"\\n      }]\\n    }; // 创建被动创建连接的PC\\n\\n    this.createAnswerPeerConnection = function (chatuser) {\\n      var pc = new PeerConnection(this.iceServers);\\n\\n      if (chatuser.type == \"audio\") {\\n        if (!live.interaction.local.audio.stream) {\\n          this.createLocalAudioMedia();\\n        }\\n\\n        pc.addStream(live.interaction.local.audio.stream);\\n      } else {\\n        if (!live.interaction.local.video.stream) {\\n          this.createLocalAudioAndVideoMedia();\\n        }\\n\\n        pc.addStream(live.interaction.local.video.stream);\\n      } // 如果检测到媒体流连接到本地，将其绑定到一个audio标签上输出\\n\\n\\n      pc.onaddstream = function (event) {\\n        if (typeof window.on_cc_live_interaction_remote_media === \"function\") {\\n          window.on_cc_live_interaction_remote_media(live.interaction.local.type, chatuser, event.stream);\\n        }\\n      };\\n\\n      pc.createAnswer(function (desc) {\\n        pc.setLocalDescription(desc);\\n        DWLive.sendInteractionMessage(live.interaction.local.type, chatuser.id, \"answer\", desc);\\n      }, function (error) {\\n        debug(\"Interaction\", \"Failure callback: \" + error);\\n      });\\n\\n      pc.onicecandidate = function (event) {\\n        if (event.candidate !== null) {\\n          DWLive.sendInteractionMessage(live.interaction.local.type, chatuser.id, \"\", event.candidate);\\n        }\\n      };\\n\\n      live.interaction.usersPcs[chatuser.id] = {\\n        pc: pc,\\n        user: chatuser\\n      };\\n      live.interaction.usersPcs.length += 1;\\n    }; // 创建主动创建连接的PC\\n\\n\\n    this.createOfferPeerConnection = function (chatuser) {\\n      var pc = new PeerConnection(this.iceServers);\\n      var p = live.interaction.local.type;\\n\\n      if (p.video) {\\n        pc.addStream(live.interaction.local.video.stream);\\n      } else {\\n        pc.addStream(live.interaction.local.audio.stream);\\n      } // 如果检测到媒体流连接到本地，将其绑定到一个audio标签上输出\\n\\n\\n      pc.onaddstream = function (event) {\\n        if (typeof window.on_cc_live_interaction_remote_media === \"function\") {\\n          window.on_cc_live_interaction_remote_media(live.interaction.local.type, chatuser, event.stream);\\n        }\\n      };\\n\\n      pc.oniceconnectionstatechange = function (d) {\\n        debug(\"Interaction\", \"iceConnectionState ...\" + pc.iceConnectionState);\\n\\n        if (pc.iceConnectionState == \"failed\") {\\n          debug(\"Interaction\", \"iceConnectionState failed\");\\n          live.interaction.hangupInteraction();\\n\\n          if (typeof window.on_cc_live_interaction_disconnect === \"function\") {\\n            window.on_cc_live_interaction_disconnect({\\n              disconnectid: DWLive.viewerid\\n            });\\n          }\\n        }\\n      };\\n\\n      pc.createOffer(function (desc) {\\n        pc.setLocalDescription(desc);\\n        DWLive.sendInteractionMessage(p, chatuser.id, \"offer\", desc);\\n      }, function (error) {\\n        if (typeof window.on_cc_live_interaction_error === \"function\") {\\n          window.on_cc_live_interaction_error(live.interaction.local.type, error, \"createOfferPeerConnection\");\\n        }\\n      });\\n\\n      pc.onicecandidate = function (event) {\\n        if (event.candidate !== null) {\\n          DWLive.sendInteractionMessage(p, chatuser.id, \"\", event.candidate);\\n        }\\n      };\\n\\n      live.interaction.usersPcs[chatuser.id] = {\\n        pc: pc,\\n        user: chatuser\\n      };\\n      live.interaction.usersPcs.length += 1;\\n    };\\n\\n    this.id = opts.interaction.id; // 当前浏览器是否支持互动功能\\n\\n    this.isSupportInteraction = function () {\\n      return window.location.protocol === \"https:\" && !!(PeerConnection && URL && getUserMedia && nativeRTCIceCandidate && nativeRTCSessionDescription);\\n    }; // 挂断互动\\n\\n\\n    this.hangupInteraction = function (callback) {\\n      if (this.isInteractioning) {\\n        Pusher.hangupInteraction(this.type, callback);\\n      } else if (this.isRequesting) {\\n        Pusher.cancelRequestInteraction(this.type, callback);\\n        this.stopLocalStream();\\n        this.cancelInteraction();\\n      } else {\\n        this.stopLocalStream();\\n        this.cancelInteraction();\\n      }\\n    };\\n  }; // LivePlayer\\n\\n\\n  var LivePlayer = {\\n    id: \"livePlayer\",\\n    swfUrl: \"//zeus.csslcloud.net/flash/Player.swf\",\\n    isReady: false,\\n    isPublishing: 0,\\n    delay: \"\",\\n    foreignPublish: \"\",\\n    init: function init() {\\n      var flashvars = {\\n        \"userid\": DWLive.userid,\\n        \"roomid\": DWLive.roomid,\\n        \"foreignPublish\": this.foreignPublish,\\n        \"warmvideoid\": this.warmVideoId,\\n        \"openhostmode\": this.openHostMode,\\n        // 多主讲\\n        \"dvr\": this.dvr,\\n        \"barrage\": this.barrageData,\\n        \"backgroundImageUri\": this.backgroundImageUri,\\n        \"backgroundHint\": this.backgroundHint,\\n        \"countDownTime\": DWLive.liveCountdown,\\n        \"openMultiQuality\": DWLive.multiQuality,\\n        \"language\": DWLive.language || \"\",\\n        \"type\": \"liveplayer\",\\n        \"upid\": DWLive.upid,\\n        \"viewerid\": this.viewerid,\\n        \"ua\": 1\\n      };\\n      var buffer = this.delay;\\n\\n      if (buffer > 0) {\\n        flashvars.buffer = buffer;\\n      }\\n\\n      var params = {\\n        allowFullscreen: \"true\",\\n        allowScriptAccess: \"always\",\\n        wmode: \"transparent\"\\n      };\\n      swfobject.embedSWF(this.swfUrl, this.id, \"100%\", \"100%\", \"10.0.0\", \"/flash/expressInstall.swf\", flashvars, params);\\n    },\\n    getFlash: function getFlash() {\\n      return swfobject.getObjectById(this.id);\\n    },\\n    getPlayerTime: function getPlayerTime() {\\n      var t = parseInt(this.getFlash()._time());\\n\\n      if (isNaN(t) || t < 0) {\\n        return 0;\\n      }\\n\\n      return t;\\n    },\\n    start: function start() {\\n      if (MobileLive.isMobile() == \"isMobile\") {\\n        //禁播\\n        if (DWLive.isBan) {\\n          $(\"#livePlayer\").css({\\n            \"text-align\": \"center\",\\n            \"color\": \"white\",\\n            \"font-size\": \"18px\",\\n            \"line-height\": \"232px\"\\n          });\\n          $(\"#livePlayer\").html(\"<p>直播已封禁，请联系管理员</p>\");\\n          return;\\n        }\\n\\n        setTimeout(function () {\\n          MobileLive.init();\\n        }, DELAY_TIME);\\n      } else {\\n        if (!this.getFlash()) {\\n          return;\\n        }\\n\\n        this.isPublishing = 1;\\n\\n        this.getFlash()._streamStart();\\n      }\\n    },\\n    end: function end() {\\n      if (MobileLive.isMobile() == \"isMobile\") {\\n        setTimeout(function () {\\n          MobileLive.end();\\n        }, DELAY_TIME);\\n      } else {\\n        if (!this.getFlash()) {\\n          return;\\n        }\\n\\n        this.isPublishing = 0;\\n\\n        this.getFlash()._streamEnd();\\n      }\\n    },\\n    // 弹幕\\n    barrage: function barrage(m) {\\n      if (!m) {\\n        return;\\n      }\\n\\n      if (!this.getFlash()) {\\n        return;\\n      }\\n\\n      if (this.getFlash()._jsTOASbarrage) {\\n        this.getFlash()._jsTOASbarrage(m);\\n      }\\n    },\\n    getLine: function getLine() {\\n      var lines = this.getFlash().getLine();\\n\\n      if (lines) {\\n        lines = JSON.parse(lines);\\n      }\\n\\n      return lines;\\n    },\\n    changeLine: function changeLine(line) {\\n      this.getFlash().changeLine(line);\\n    },\\n    changeVideoScale: function changeVideoScale(t) {\\n      this.getFlash()._showScreenScale(t);\\n    },\\n    onlyAudio: function onlyAudio() {\\n      this.getFlash()._onlyAudio();\\n    },\\n    setSound: function setSound(n) {\\n      this.getFlash()._SetSound(n);\\n    },\\n    // 打开声音\\n    openSound: function openSound() {\\n      if (!this.getFlash()) {\\n        return;\\n      }\\n\\n      this.getFlash()._onSound();\\n    },\\n    // 关闭声音\\n    closeSound: function closeSound() {\\n      if (!this.getFlash()) {\\n        return;\\n      }\\n\\n      this.getFlash()._unSound();\\n    },\\n    // 开启关闭弹幕\\n    openBarrage: function openBarrage(b) {\\n      if (!this.getFlash()) {\\n        return;\\n      }\\n\\n      this.getFlash()._barrage(b);\\n    },\\n    showControl: function showControl(b) {\\n      if (!this.getFlash()) {\\n        return;\\n      }\\n\\n      this.getFlash()._ShowControl(b);\\n    },\\n    //封禁\\n    banLive: function banLive() {\\n      if (!this.getFlash()) {\\n        return;\\n      }\\n\\n      this.getFlash()._banLive();\\n    },\\n    //解禁\\n    unbanLive: function unbanLive() {\\n      if (!this.getFlash()) {\\n        return;\\n      }\\n\\n      this.getFlash()._unbanLive();\\n    },\\n    // 显示跑马灯功能\\n    showMarquee: function showMarquee(marquee) {\\n      if (!marquee) {\\n        return;\\n      }\\n\\n      if (!this.getFlash()) {\\n        return;\\n      }\\n\\n      this.getFlash()._showMarqueePlugin(marquee);\\n    },\\n    closeMarquee: function closeMarquee() {\\n      if (!this.getFlash()) {\\n        return;\\n      }\\n\\n      this.getFlash()._closeMarqueePlugin({\\n        name: \"PluginForMarquee\"\\n      });\\n    }\\n  }; // window.LivePlayer = LivePlayer;\\n\\n  window._onStart = function () {\\n    //\\t\\t直播播放器准备开始播放\\n    LivePlayer.isReady = true;\\n  };\\n\\n  function initDrawPanelInfo() {\\n    if (!isHistoryReady) {\\n      setTimeout(function () {\\n        initDrawPanelInfo();\\n      }, 3000);\\n      return;\\n    }\\n\\n    if (DWDpc.fastMode) {\\n      return;\\n    }\\n\\n    if (draws.length) {\\n      DrawPanel.draws(draws);\\n      draws = [];\\n    } // 显示最后一张图片\\n\\n\\n    if (pageChanges.length) {\\n      var ppc = pageChanges.pop();\\n\\n      if (!ppc) {\\n        return;\\n      }\\n\\n      DrawPanel.filp(ppc);\\n\\n      if (animations.length) {\\n        var animation = animations.pop();\\n        var animationJ = toJson(animation);\\n        var ppcJ = toJson(ppc);\\n\\n        if (ppcJ.docid == animationJ.docid && ppcJ.time <= animationJ.time) {\\n          DrawPanel.animationFilp(animation);\\n        }\\n      }\\n\\n      pageChanges = [];\\n    }\\n  } // DrawPanel\\n\\n\\n  var DrawPanel = {\\n    id: \"drawPanel\",\\n    isReady: false,\\n    isProcessing: false,\\n    getWidth: function getWidth() {\\n      return \"100%\";\\n    },\\n    getHeight: function getHeight() {\\n      return \"100%\";\\n    },\\n    swfUrl: \"//zeus.csslcloud.net/flash/Player.swf\",\\n    init: function init() {\\n      var flashvars = {\\n        \"type\": \"drawpanel\"\\n      };\\n      var params = {\\n        allowFullscreen: \"true\",\\n        allowScriptAccess: \"always\",\\n        wmode: \"transparent\"\\n      };\\n      var attributes = {};\\n\\n      if (!MobileLive.isIPad() && !MobileLive.isIPhone() && !MobileLive.isAndroid() && !MobileLive.isWindowsPhone()) {\\n        //开启极速动画模式\\n        if (!DWDpc.fastMode) {\\n          swfobject.embedSWF(this.swfUrl, this.id, this.getWidth(), this.getHeight(), \"10.0.0\", \"/flash/expressInstall.swf\", flashvars, params, attributes);\\n        }\\n      }\\n    },\\n    getSwf: function getSwf() {\\n      if (!this.isReady) {\\n        return;\\n      }\\n\\n      return swfobject.getObjectById(this.id);\\n    },\\n    clear: function clear() {\\n      var swf = this.getSwf();\\n\\n      if (!swf) {\\n        return;\\n      }\\n\\n      swf._streamEnd();\\n\\n      Pusher.pagechangedata = [];\\n      Pusher.drawjson = [];\\n    },\\n    // 画图\\n    draw: function draw(j) {\\n      var swf = this.getSwf();\\n\\n      if (!swf) {\\n        return;\\n      }\\n\\n      swf.draw(j);\\n    },\\n    draws: function draws(js) {\\n      var swf = this.getSwf();\\n\\n      if (!swf) {\\n        return;\\n      }\\n\\n      (function (jstr) {\\n        setTimeout(function () {\\n          swf.drawList(jstr);\\n        });\\n      })(js);\\n    },\\n    // 翻页\\n    filp: function filp(j) {\\n      var swf = this.getSwf();\\n\\n      if (!swf) {\\n        return;\\n      }\\n\\n      var documentDisplayMode = DWLive.documentDisplayMode;\\n\\n      if (documentDisplayMode == 1) {\\n        this.displayMode = \"auto\";\\n      } else if (documentDisplayMode == 2) {\\n        this.displayMode = \"width\";\\n      } else {\\n        this.displayMode = \"auto\";\\n      }\\n\\n      if (live.adapt !== undefined) {\\n        this.displayMode = live.adapt ? \"auto\" : \"width\";\\n      }\\n\\n      var jj = JSON.parse(j);\\n      var u = jj.url;\\n      var isHttps = window.location.protocol === \"https:\";\\n\\n      if (isHttps) {\\n        jj.url = u.replace(/http:/g, \"https:\");\\n      }\\n\\n      swf.filp(JSON.stringify(jj), this.displayMode);\\n    },\\n    // 动画\\n    animationFilp: function animationFilp(j) {\\n      var swf = this.getSwf();\\n\\n      if (!swf) {\\n        return;\\n      }\\n\\n      swf.animation(j);\\n    },\\n    // 弹幕\\n    barrage: function barrage(m) {\\n      if (!m) {\\n        return;\\n      }\\n\\n      if (!this.getSwf()) {\\n        return;\\n      }\\n\\n      if (this.getSwf()._jsTOASbarrage) {\\n        this.getSwf()._jsTOASbarrage(m);\\n      }\\n    },\\n    // 显示跑马灯功能\\n    showMarquee: function showMarquee(marquee) {\\n      if (!marquee) {\\n        return;\\n      }\\n\\n      if (!this.getSwf()) {\\n        return;\\n      }\\n\\n      this.getSwf().showMarqueeLight(marquee);\\n    }\\n  };\\n  var draws = [];\\n  var pageChanges = [];\\n  var animations = [];\\n  var isHistoryReady = false; // 历史数据\\n\\n  var History = function History() {\\n    $.ajax({\\n      url: \"//view.csslcloud.net/api/view/info?userid=\" + DWLive.userid + \"&roomid=\" + DWLive.roomid,\\n      type: \"GET\",\\n      dataType: \"jsonp\",\\n      success: function success(data) {\\n        if (!data.success) {\\n          return;\\n        }\\n\\n        if (!data.datas) {\\n          return;\\n        }\\n\\n        var datas = data.datas;\\n        var meta = datas.meta;\\n\\n        if (!meta) {\\n          return;\\n        }\\n\\n        LivePlayer.isPublishing = meta.isPublishing; // 没有推流\\n\\n        if (meta.isPublishing != 1) {\\n          return;\\n        }\\n\\n        var answers = meta.answer ? meta.answer : [];\\n        var questions = meta.question ? meta.question : [];\\n        var broadcasts = meta.broadcast ? meta.broadcast : [];\\n\\n        for (var i = 0; i < answers.length; i++) {\\n          var answer = answers[i];\\n\\n          for (var ii = 0; ii < questions.length; ii++) {\\n            var question = questions[ii];\\n\\n            if (question.encryptId == answer.encryptId) {\\n              answer.questionUserId = question.questionUserId;\\n            }\\n          }\\n        }\\n\\n        if (questions && questions.length) {\\n          for (var i = 0; i < questions.length; i++) {\\n            var question = questions[i];\\n\\n            if (typeof DWLive.onQuestion === \"function\") {\\n              DWLive.onQuestion(JSON.stringify({\\n                \"action\": \"question\",\\n                \"value\": {\\n                  \"id\": question.encryptId,\\n                  \"content\": question.content,\\n                  \"userId\": question.questionUserId,\\n                  \"groupId\": question.groupId,\\n                  \"userName\": question.questionUserName,\\n                  \"isPublish\": question.isPublish,\\n                  \"triggerTime\": question.triggerTime,\\n                  \"userAvatar\": question.userAvatar\\n                }\\n              }));\\n            }\\n          }\\n        }\\n\\n        if (answers && answers.length) {\\n          for (var i = 0; i < answers.length; i++) {\\n            var answer = answers[i];\\n\\n            if (typeof DWLive.onAnswer === \"function\") {\\n              DWLive.onAnswer(JSON.stringify({\\n                \"action\": \"answer\",\\n                \"value\": {\\n                  \"questionId\": answer.encryptId,\\n                  \"isPrivate\": answer.isPrivate,\\n                  \"content\": answer.content,\\n                  \"userId\": answer.answerUserId,\\n                  \"groupId\": answer.groupId,\\n                  \"userName\": answer.answerUserName,\\n                  \"questionUserId\": answer.questionUserId,\\n                  \"triggerTime\": answer.triggerTime,\\n                  \"userAvatar\": answer.userAvatar\\n                }\\n              }));\\n            }\\n          }\\n        }\\n\\n        if (broadcasts && broadcasts.length) {\\n          for (var i = 0; i < broadcasts.length; i++) {\\n            var broadcast = broadcasts[i];\\n\\n            if (typeof DWLive.onBroadcastMsg == \"function\") {\\n              DWLive.onBroadcastMsg({\\n                content: broadcast.content,\\n                time: broadcast.time\\n              });\\n            }\\n          }\\n        }\\n\\n        if (MobileLive.isMobile() == \"isMobile\" && $.DrawingBoard) {\\n          $.DrawingBoard.history(meta);\\n        } //极速动画获取历史信息\\n\\n\\n        DWDpc.history(meta);\\n        var chatLogs = meta.chatLog;\\n\\n        if (chatLogs && chatLogs.length) {\\n          var cls = [];\\n\\n          for (var i = 0; i < chatLogs.length; i++) {\\n            var chatLog = chatLogs[i];\\n            cls.push({\\n              \"userid\": chatLog.userId,\\n              \"username\": chatLog.userName,\\n              \"userrole\": chatLog.userRole,\\n              \"useravatar\": chatLog.userAvatar,\\n              \"groupId\": chatLog.groupId,\\n              \"msg\": chatLog.content,\\n              \"time\": chatLog.time,\\n              \"chatId\": chatLog.chatId,\\n              \"status\": chatLog.status,\\n              \"usercustommark\": chatLog.userCustomMark\\n            });\\n          }\\n\\n          if (typeof DWLive.onPublicChatMessage === \"function\") {\\n            for (var idx = 0; idx < cls.length; idx++) {\\n              DWLive.onPublicChatMessage(JSON.stringify(cls[idx]));\\n            }\\n          }\\n        }\\n\\n        if (!DWDpc.fastMode) {\\n          var pageChange = meta.pageChange;\\n\\n          if (pageChange && pageChange.length) {\\n            pageChange.sort(function (p1, p2) {\\n              return parseInt(p1.time) - parseInt(p2.time);\\n            });\\n            var lastPage = pageChange.pop();\\n            pageChanges.push(JSON.stringify({\\n              \"fileName\": lastPage.docName,\\n              \"totalPage\": lastPage.docTotalPage,\\n              \"docid\": lastPage.encryptDocId,\\n              \"url\": lastPage.url,\\n              \"page\": lastPage.pageNum,\\n              \"time\": lastPage.time,\\n              \"useSDK\": lastPage.useSDK\\n            }));\\n          }\\n\\n          var animation = meta.animation;\\n\\n          if (animation && animation.length) {\\n            animation.sort(function (p1, p2) {\\n              return parseInt(p1.time) - parseInt(p2.time);\\n            });\\n            var lastAnimation = animation.pop();\\n            animations.push(JSON.stringify({\\n              \"fileName\": lastAnimation.docName,\\n              \"totalPage\": lastAnimation.docTotalPage,\\n              \"docid\": lastAnimation.encryptDocId,\\n              \"url\": lastAnimation.url,\\n              \"page\": lastAnimation.pageNum,\\n              \"time\": lastAnimation.time,\\n              \"step\": lastAnimation.step\\n            }));\\n          }\\n\\n          var draw = meta.draw;\\n\\n          if (draw && draw.length) {\\n            for (var i = 0; i < draw.length; i++) {\\n              draws.push(draw[i].data);\\n            }\\n          }\\n        }\\n\\n        isHistoryReady = true;\\n      }\\n    });\\n  };\\n\\n  var opts = {\\n    // 互动信息\\n    interaction: {\\n      id: \"interactionPlayer\",\\n      width: \"100%\",\\n      height: \"100%\"\\n    }\\n  };\\n\\n  var Live = function Live(opts) {\\n    this.interaction = new Interaction(opts);\\n  };\\n\\n  var live = new Live(opts);\\n\\n  window.on_drampanel_ready = function () {\\n    // 画板Flash加载完成回调\\n    DrawPanel.isReady = true;\\n    setTimeout(function () {\\n      initDrawPanelInfo();\\n    }, 1500);\\n  }; // 画图事件\\n\\n\\n  window.on_cc_live_dw_draw = function (data) {\\n    setTimeout(function () {\\n      DWDpc.draw(data);\\n    }, getDeltaTime());\\n    setTimeout(function () {\\n      var j = toJson(data);\\n      DrawPanel.draw(JSON.stringify(j.value.data));\\n    }, getDeltaTime());\\n\\n    if (MobileLive.isMobile() == \"isMobile\") {\\n      setTimeout(function () {\\n        $.DrawingBoard && $.DrawingBoard.db(data);\\n      }, getDeltaTime());\\n    }\\n  }; // 翻页事件\\n\\n\\n  window.on_cc_live_dw_page_change = function (data) {\\n    //极速动画\\n    setTimeout(function () {\\n      DWDpc.pageChange(data);\\n    }, getDeltaTime()); //flash\\n\\n    setTimeout(function () {\\n      var j = toJson(data);\\n      DrawPanel.filp(JSON.stringify(j.value));\\n    }, getDeltaTime()); //canvas\\n\\n    if (MobileLive.isMobile() == \"isMobile\") {\\n      setTimeout(function () {\\n        $.DrawingBoard && $.DrawingBoard.db(data);\\n      }, getDeltaTime());\\n    }\\n  }; // 动画翻页事件\\n\\n\\n  window.on_cc_live_dw_animation_change = function (data) {\\n    setTimeout(function () {\\n      DWDpc.animationChange(data);\\n    }, getDeltaTime());\\n    setTimeout(function () {\\n      var j = toJson(data);\\n      DrawPanel.animationFilp(JSON.stringify(j.value));\\n    }, getDeltaTime());\\n\\n    if (MobileLive.isMobile() == \"isMobile\") {\\n      setTimeout(function () {\\n        $.DrawingBoard && $.DrawingBoard.db(data);\\n      }, getDeltaTime());\\n    }\\n  }; // Chat\\n\\n\\n  var Chat = {\\n    init: function init() {\\n      Pusher.socket.on(\"chat_message\", function (j) {\\n        if (typeof DWLive.onPublicChatMessage === \"function\") {\\n          DWLive.onPublicChatMessage(j);\\n        }\\n      }); //聊天审核\\n\\n      Pusher.socket.on(\"chat_log_manage\", function (j) {\\n        if (typeof DWLive.onPublicChatLogManage === \"function\") {\\n          DWLive.onPublicChatLogManage(j);\\n        }\\n      }); // 消息提醒\\n\\n      Pusher.socket.on(\"notification\", function (j) {\\n        if (typeof DWLive.onNotification === \"function\") {\\n          DWLive.onNotification(j);\\n        }\\n      });\\n      Pusher.socket.on(\"information\", function (j) {\\n        if (typeof DWLive.onInformation === \"function\") {\\n          DWLive.onInformation(j);\\n        }\\n      }); // 接收发送私聊函数\\n\\n      Pusher.socket.on(\"private_chat_self\", function (j) {\\n        if (typeof DWLive.onPrivateChatMessage === \"function\") {\\n          DWLive.onPrivateChatMessage(j);\\n        }\\n      }); // 接收回答私聊函数\\n\\n      Pusher.socket.on(\"private_chat\", function (j) {\\n        if (typeof DWLive.onPrivateAnswer === \"function\") {\\n          DWLive.onPrivateAnswer(j);\\n        }\\n      }); // 在线列表\\n\\n      Pusher.socket.on(\"room_context\", function (msg) {}); // 自定义消息\\n\\n      Pusher.socket.on(\"custom_message\", function (j) {\\n        if (typeof DWLive.onCustomChatMessage === \"function\") {\\n          DWLive.onCustomChatMessage(j);\\n        }\\n      });\\n    }\\n  }; // Qa\\n\\n  var Qa = {\\n    init: function init() {\\n      // 问答->提交问题\\n      Pusher.socket.on(\"question\", function (j) {\\n        if (typeof DWLive.onQuestion === \"function\") {\\n          DWLive.onQuestion(j);\\n        }\\n\\n        if (typeof DWLive.onQuestionSend === \"function\") {\\n          DWLive.onQuestionSend(j);\\n        }\\n      }); // 问答->返回答案\\n\\n      Pusher.socket.on(\"answer\", function (j) {\\n        if (typeof DWLive.onAnswer === \"function\") {\\n          DWLive.onAnswer(j);\\n        }\\n\\n        if (typeof DWLive.onAnswerSend === \"function\") {\\n          DWLive.onAnswerSend(j);\\n        }\\n      });\\n    }\\n  }; //事件兼容处理\\n\\n  var Event = {};\\n\\n  Event.addEvents = function (target, eventType, handle) {\\n    if (document.addEventListener) {\\n      Event.addEvents = function (target, eventType, handle) {\\n        target.addEventListener(eventType, handle, false);\\n      };\\n    } else {\\n      Event.addEvents = function (target, eventType, handle) {\\n        target.attachEvent(\"on\" + eventType, function () {\\n          handle.call(target, arguments);\\n        });\\n      };\\n    }\\n\\n    ;\\n    Event.addEvents(target, eventType, handle);\\n  };\\n\\n  var MobileLive = {\\n    src: \"\",\\n    audio: false,\\n    line: 0,\\n    init: function init() {\\n      var _this = this;\\n\\n      $.ajax({\\n        url: \"//zeus.csslcloud.net/api/hls/play\",\\n        type: \"GET\",\\n        dataType: \"json\",\\n        data: {\\n          roomid: DWLive.roomid,\\n          userid: DWLive.userid\\n        },\\n        success: function success(data) {\\n          var status = data.live.status;\\n\\n          if (status == 0) {\\n            _this.m3u8 = data.live.m3u8;\\n            _this.src = data.live.m3u8;\\n            _this.secureHosts = data.live.secureHosts || [];\\n            _this.audioM3u8 = data.live.audioM3u8 || [];\\n            _this.audioSecureHosts = data.live.audioSecureHosts || [];\\n            _this.isHttps = window.location.protocol === \"https:\";\\n            options.init();\\n            options.liveId = data.live.liveId;\\n\\n            if (_this.isHttps && _this.secureHosts && _this.secureHosts.length) {\\n              _this.m3u8 = _this.secureHosts;\\n            }\\n\\n            _this.appendVideo(_this.m3u8[0]);\\n\\n            if (typeof DWLive.onLiveStarting === \"function\") {\\n              DWLive.onLiveStarting();\\n            } //ios解禁播放失败处理\\n\\n\\n            var vd = $(\"#livePlayer>video\")[0];\\n            var index = 0;\\n\\n            var handle = function handle() {\\n              if (index >= 3) {\\n                vd.removeEventListener(\"error\", handle);\\n                return;\\n              }\\n\\n              vd.removeEventListener(\"error\", handle);\\n              setTimeout(function () {\\n                index++;\\n                vd.src = vd.src;\\n                Event.addEvents(vd, \"error\", handle, false);\\n              }, 1000);\\n            };\\n\\n            Event.addEvents(vd, \"error\", handle, false);\\n          } else {\\n            if (DWLive.isBan) {\\n              $(\"#livePlayer\").css({\\n                \"text-align\": \"center\",\\n                \"color\": \"white\",\\n                \"font-size\": \"18px\",\\n                \"line-height\": \"232px\"\\n              });\\n              $(\"#livePlayer\").html(\"<p>直播已封禁，请联系管理员</p>\");\\n              return;\\n            }\\n          }\\n        }\\n      });\\n    },\\n    appendVideo: function appendVideo(s) {\\n      var v = \"<video id=\\\\\"player_live\\\\\" webkit-playsinline playsinline controls autoplay x-webkit-airplay=\\\\\"allow\\\\\" x5-playsinline width=\\\\\"100%\\\\\" height=\\\\\"100%\\\\\" src=\\\\\"\" + s + \"\\\\\"></video>\";\\n      $(\"#\" + LivePlayer.id).html(v);\\n      var video = document.getElementById(\"player_live\");\\n\\n      DWLive.onKickOut = function () {\\n        $(\"#\" + LivePlayer.id).html(\"\");\\n      };\\n\\n      this.report = new ReportLog(options, 1, 11, video, true);\\n    },\\n    ban: function ban() {\\n      $(\"#livePlayer\").css({\\n        \"text-align\": \"center\",\\n        \"color\": \"white\",\\n        \"font-size\": \"18px\",\\n        \"line-height\": \"232px\"\\n      });\\n      $(\"#livePlayer\").html(\"<p>直播已封禁，请联系管理员</p>\");\\n    },\\n    unban: function unban() {\\n      $(\"#livePlayer\").css({\\n        \"text-align\": \"\",\\n        \"color\": \"\",\\n        \"font-size\": \"\",\\n        \"line-height\": \"\"\\n      });\\n      this.init();\\n    },\\n    end: function end() {\\n      $(\"#\" + LivePlayer.id).html(\"\");\\n      this.report.stopTimer();\\n    },\\n    appendDoc: function appendDoc(s) {\\n      var isHttps = window.location.protocol === \"https:\";\\n\\n      if (isHttps) {\\n        s = s.replace(/http:/g, \"https:\");\\n      }\\n\\n      var img = \"<img src=\\\\\"\" + s + \"\\\\\" />\";\\n      $(\"#\" + DrawPanel.id).html(img);\\n    },\\n    changeLine: function changeLine(line) {\\n      $(\"#\" + LivePlayer.id).find(\"video\").attr(\"src\", this.m3u8[line]);\\n      this.line = line;\\n\\n      if (MobileLive.audio) {\\n        audio.src = \"\";\\n        audio.src = this.m3u8[this.line];\\n        audio.play();\\n      }\\n    },\\n    onlyAudio: function onlyAudio() {\\n      var v = $(\"#\" + LivePlayer.id).find(\"video\");\\n      MobileLive.audio = !MobileLive.audio;\\n\\n      if (MobileLive.audio) {\\n        if (this.isHttps && this.audioSecureHosts && this.audioSecureHosts.length) {\\n          this.m3u8 = this.audioSecureHosts;\\n        } else {\\n          this.m3u8 = this.audioM3u8;\\n        }\\n\\n        audio = new Audio();\\n        audio.src = this.m3u8[this.line];\\n        audio.play();\\n      } else {\\n        if (this.isHttps && this.secureHosts && this.secureHosts.length) {\\n          this.m3u8 = this.secureHosts;\\n        } else {\\n          this.m3u8 = this.src;\\n        }\\n\\n        audio.src = \"\";\\n        v.attr(\"src\", this.m3u8[this.line]);\\n      }\\n    },\\n    isMobile: function isMobile() {\\n      if (this.isIPad() || this.isIPhone() || this.isAndroid() || this.isWindowsPhone()) {\\n        return \"isMobile\";\\n      }\\n    },\\n    isIPad: function isIPad() {\\n      return navigator.userAgent.match(/iPad/i) != null;\\n    },\\n    isIPhone: function isIPhone() {\\n      return navigator.userAgent.match(/iPhone/i) != null;\\n    },\\n    isAndroid: function isAndroid() {\\n      return navigator.userAgent.match(/Android/i) != null;\\n    },\\n    isWindowsPhone: function isWindowsPhone() {\\n      return navigator.userAgent.match(/Windows Phone/i) != null;\\n    }\\n  }; // 接受语音互动请求\\n\\n  window.on_cc_live_accept_interaction = function (data) {\\n    DWLive.closeSound(); // 清除请求超时计时器\\n\\n    live.interaction.clearRequestTimeoutTimer();\\n    DWLive.enterInteractionRoom();\\n    live.interaction.isInteractioning = true;\\n    live.interaction.setCallingTimer();\\n\\n    if (typeof window.on_cc_live_interaction_accept === \"function\") {\\n      window.on_cc_live_interaction_accept(live.interaction.local.type, toJson(data));\\n    }\\n  }; // 主动连接语音聊天信息\\n\\n\\n  window.on_cc_live_interaction_chatusers = function (data) {\\n    data = toJson(data);\\n    $.each(data, function (index, chatuser) {\\n      if (chatuser.id == DWLive.viewerid) {\\n        return true;\\n      } // 客户端只是和主播进行语音互动\\n\\n\\n      if (chatuser.role == \"publisher\" && !chatuser.isMainSpeaker) {\\n        return true;\\n      }\\n\\n      live.interaction.createOfferPeerConnection(chatuser);\\n    });\\n  }; // 接收互动信息\\n\\n\\n  window.on_cc_live_interaction_message = function (d) {\\n    var d = toJson(d);\\n    debug(\"Interaction\", \"rtc互动信息:\" + JSON.stringify(d));\\n    var toId = d.toid;\\n    var fromId = d.fromid;\\n    var fromName = d.fromname;\\n    var type = d.type;\\n    var data = d.data;\\n\\n    if (typeof data === \"string\") {\\n      data = JSON.parse(data);\\n    }\\n\\n    var event = d.event;\\n\\n    if (event === \"offer\") {\\n      data.type = event;\\n      live.interaction.createAnswerPeerConnection({\\n        id: fromId,\\n        name: fromName,\\n        type: type\\n      });\\n      var pc = live.interaction.usersPcs[fromId].pc;\\n\\n      if (!pc) {\\n        return;\\n      }\\n\\n      pc.setRemoteDescription(new nativeRTCSessionDescription(data));\\n      pc.createAnswer(function () {}, function (error) {\\n        debug(\"Interaction\", \"Failure callback: \" + error);\\n      });\\n    } else if (event === \"answer\") {\\n      var pc = live.interaction.usersPcs[fromId].pc;\\n\\n      if (!pc) {\\n        return;\\n      }\\n\\n      data.type = event;\\n      debug(\"Interaction\", \"answer spark_message信息:\" + data);\\n      pc.setRemoteDescription(new nativeRTCSessionDescription(data));\\n      pc.receivedAnswer = true;\\n\\n      if (!pc.hasAddIce && pc.RTCICE) {\\n        pc.addIceCandidate(pc.RTCICE);\\n      }\\n    } else {\\n      var u = live.interaction.usersPcs[fromId];\\n\\n      if (!u) {\\n        u = live.interaction.usersPcs[toId];\\n      }\\n\\n      var pc = u ? u.pc : null;\\n\\n      if (!pc) {\\n        return;\\n      } // 收到answer之后再addIce\\n\\n\\n      var ice = new RTCIceCandidate(data);\\n\\n      if (pc.receivedAnswer) {\\n        pc.hasAddIce = true;\\n        pc.addIceCandidate(ice);\\n      } else {\\n        pc.hasAddIce = false;\\n        pc.RTCICE = ice;\\n      }\\n    }\\n  };\\n\\n  window.isDebug = false; // 打印debug信息\\n\\n  var debug = function debug(t, d) {\\n    if (!window.isDebug) {\\n      return;\\n    }\\n\\n    if (console && typeof console.log === \"function\") {\\n      console.log(t, d);\\n    }\\n  };\\n\\n  function toJson(data) {\\n    if (typeof data === \"string\") {\\n      try {\\n        return JSON.parse(data);\\n      } catch (e) {\\n        return {};\\n      }\\n    }\\n\\n    return data;\\n  }\\n\\n  window.DWLive = DWLive;\\n  window.live = live; // live player ready\\n\\n  window._swfInit = function () {\\n    if (typeof window.on_cc_live_player_ready === \"function\") {\\n      window.on_cc_live_player_ready();\\n    }\\n  };\\n  /**\\n   * Flash 加载完成\\n   * */\\n\\n\\n  window._swfOk = function (id) {\\n    if (typeof window.on_cc_swf_loading_completed === \"function\") {\\n      window.on_cc_swf_loading_completed(id);\\n    }\\n  };\\n\\n  function getDeltaTime() {\\n    var b = LivePlayer.delay;\\n\\n    if (isNaN(b) || b < 0) {\\n      b = 0;\\n    }\\n\\n    b = b * 1000; // 低延迟\\n\\n    if (MobileLive.isMobile() == \"isMobile\") {\\n      if (b === 0) {\\n        return 5000;\\n      } else {\\n        return 10000;\\n      }\\n    } else {\\n      if (b === 0) {\\n        return 1300;\\n      } else {\\n        return 3000;\\n      }\\n    }\\n  }\\n\\n  function getDelayTime() {\\n    var b = LivePlayer.delay;\\n\\n    if (isNaN(b) || b < 0) {\\n      b = 0;\\n    }\\n\\n    if (b) {// console.log(\"非低延迟模式\");\\n    } else {} // console.log(\"低延迟模式\");\\n      // b = b * 1000;\\n      // 低延迟\\n\\n\\n    if (MobileLive.isMobile() == \"isMobile\") {\\n      if (b === 0) {\\n        return 5000;\\n      } else {\\n        return 10000;\\n      }\\n    } else {\\n      if (b === 0) {\\n        return 1300;\\n      } else {\\n        return 3000;\\n      }\\n    }\\n  }\\n})(window);//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///10\\n')}});","extractedComments":[]}